fileName: ../data/dataset_edited_without_time.csv
targetName: death_event
Read data from file ../data/dataset_edited_without_time.csv
Number of executions = 100
[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.01934196

When k=1, the MCC value is 0.01934196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.02411658

When k=2, the MCC value is -0.02411658	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.02376242

When k=3, the MCC value is -0.02376242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.04494666

When k=4, the MCC value is -0.04494666	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.04494666

When k=5, the MCC value is -0.04494666	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1172544

When k=6, the MCC value is -0.1172544	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.09090909

When k=7, the MCC value is 0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1515152

When k=8, the MCC value is -0.1515152	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.03030303

When k=9, the MCC value is -0.03030303	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.02686077

When k=10, the MCC value is 0.02686077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=11, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=12, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=13, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=14, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=15, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.01866308

When k=16, the MCC value is 0.01866308	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1177603

When k=18, the MCC value is -0.1177603	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1177603

When k=20, the MCC value is -0.1177603	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 7, corresponding to MCC=0.0909090909090909
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=7) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2162248
ROC AUC 		0.4204545


TOTAL:

 FN =  16  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.22 	 0.00 	 0.62 	 0.00 	 0.84		 0.22		0.42

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09712722

When k=1, the MCC value is 0.09712722	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=2, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09036288

When k=3, the MCC value is 0.09036288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.2063083

When k=4, the MCC value is 0.2063083	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2150303

When k=5, the MCC value is 0.2150303	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.08443506

When k=6, the MCC value is 0.08443506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1800219

When k=7, the MCC value is 0.1800219	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.08443506

When k=8, the MCC value is 0.08443506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1157855

When k=9, the MCC value is 0.1157855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=10, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=11, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=12, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=13, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=14, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=15, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1895806

When k=16, the MCC value is -0.1895806	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1895806

When k=17, the MCC value is -0.1895806	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=18, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=19, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=20, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=21, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=22, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=23, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.02901447

When k=24, the MCC value is -0.02901447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=25, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=26, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=28, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=36, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=37, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.215030300413126
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3139654
ROC AUC 		0.515873


TOTAL:

 FN =  14  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.04 	 0.27 	 0.63 	 0.22 	 0.81		 0.31		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02786391

When k=1, the MCC value is 0.02786391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.07412493

When k=2, the MCC value is 0.07412493	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.3045725

When k=3, the MCC value is 0.3045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.121829

When k=4, the MCC value is 0.121829	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.07342231

When k=5, the MCC value is 0.07342231	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.138675

When k=6, the MCC value is 0.138675	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=7, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=8, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=9, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=10, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.2132007

When k=11, the MCC value is -0.2132007	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=12, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=13, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=14, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=15, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=16, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=17, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=18, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=19, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=20, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=21, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=22, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.304572451936586
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3787212
ROC AUC 		0.529304


TOTAL:

 FN =  16  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.07 	 0.30 	 0.62 	 0.24 	 0.82		 0.38		0.53

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.2105263

When k=1, the MCC value is 0.2105263	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1459918

When k=2, the MCC value is -0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1757861

When k=3, the MCC value is 0.1757861	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.002979425

When k=4, the MCC value is -0.002979425	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06105044

When k=5, the MCC value is -0.06105044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.06105044

When k=6, the MCC value is -0.06105044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=7, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=8, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=9, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=10, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=11, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=12, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=13, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=14, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.210526315789474
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3324936
ROC AUC 		0.4761905


TOTAL:

 FN =  15  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  6  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  13  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  26  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.05 	 0.30 	 0.53 	 0.29 	 0.67		 0.33		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09695723

When k=1, the MCC value is 0.09695723	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.0489116

When k=2, the MCC value is 0.0489116	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1332504

When k=3, the MCC value is 0.1332504	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0

When k=4, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.183073

When k=5, the MCC value is 0.183073	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1632993

When k=6, the MCC value is 0.1632993	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=7, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0

When k=8, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1705606

When k=9, the MCC value is 0.1705606	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=10, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=11, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1705606

When k=12, the MCC value is 0.1705606	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=13, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=14, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=15, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=16, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1622214

When k=18, the MCC value is 0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.1622214

When k=19, the MCC value is 0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=20, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 15, corresponding to MCC=0.184114923579665
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=15) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2523673
ROC AUC 		0.4886364


TOTAL:

 FN =  16  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  43  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.08 	 0.00 	 0.72 	 0.00 	 0.98		 0.25		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.04780914

When k=1, the MCC value is 0.04780914	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.025

When k=2, the MCC value is 0.025	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.02860648

When k=3, the MCC value is -0.02860648	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.08838835

When k=4, the MCC value is -0.08838835	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=5, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.06091449

When k=6, the MCC value is -0.06091449	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06933752

When k=7, the MCC value is -0.06933752	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.09901475

When k=8, the MCC value is -0.09901475	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=9, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=10, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=11, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1468446

When k=12, the MCC value is -0.1468446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1468446

When k=13, the MCC value is -0.1468446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=14, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1468446

When k=15, the MCC value is -0.1468446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1889822

When k=16, the MCC value is -0.1889822	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=17, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=18, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=19, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=20, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=21, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=22, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=23, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=24, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=26, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=28, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=30, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 24, corresponding to MCC=0.184114923579665
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=24) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2208214
ROC AUC 		0.4891304


TOTAL:

 FN =  14  /  14 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  14 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  46 	 (truth == 0) & (prediction >= threshold)
 TN =  45  /  46 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.07 	 0.00 	 0.75 	 0.00 	 0.98		 0.22		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1674429

When k=1, the MCC value is -0.1674429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.3125271

When k=2, the MCC value is -0.3125271	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.2302831

When k=3, the MCC value is -0.2302831	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1865506

When k=4, the MCC value is -0.1865506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1459918

When k=5, the MCC value is -0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.01042799

When k=6, the MCC value is 0.01042799	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1653708

When k=7, the MCC value is -0.1653708	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.06778192

When k=8, the MCC value is -0.06778192	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.005401382

When k=9, the MCC value is -0.005401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.04741047

When k=10, the MCC value is -0.04741047	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1480391

When k=11, the MCC value is -0.1480391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.2118842

When k=12, the MCC value is -0.2118842	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.06741999

When k=13, the MCC value is -0.06741999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1079545

When k=14, the MCC value is -0.1079545	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1740777

When k=15, the MCC value is -0.1740777	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1931818

When k=16, the MCC value is -0.1931818	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1544557

When k=17, the MCC value is -0.1544557	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.207289

When k=18, the MCC value is -0.207289	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.236525

When k=19, the MCC value is -0.236525	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1256539

When k=20, the MCC value is -0.1256539	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=21, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.04222003

When k=22, the MCC value is -0.04222003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.09090909

When k=23, the MCC value is -0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.06741999

When k=24, the MCC value is -0.06741999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.06741999

When k=25, the MCC value is -0.06741999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=26, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.01478281

When k=27, the MCC value is -0.01478281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.01478281

When k=28, the MCC value is -0.01478281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=29, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1256539

When k=30, the MCC value is -0.1256539	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.2533202

When k=31, the MCC value is -0.2533202	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.101749

When k=32, the MCC value is -0.101749	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0.03458572

When k=33, the MCC value is 0.03458572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0.141019

When k=34, the MCC value is 0.141019	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0.09090909

When k=35, the MCC value is 0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=36, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0.09798119

When k=37, the MCC value is 0.09798119	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=38, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 36, corresponding to MCC=0.215893884794186
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=36) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2779169
ROC AUC 		0.5085227


TOTAL:

 FN =  15  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.03 	 0.11 	 0.72 	 0.06 	 0.95		 0.28		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09325048

When k=1, the MCC value is 0.09325048	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.006056159

When k=2, the MCC value is 0.006056159	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.07559289

When k=3, the MCC value is 0.07559289	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1299269

When k=4, the MCC value is 0.1299269	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1657484

When k=5, the MCC value is 0.1657484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.02366905

When k=6, the MCC value is 0.02366905	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1657484

When k=7, the MCC value is 0.1657484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1140834

When k=8, the MCC value is 0.1140834	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1140834

When k=9, the MCC value is 0.1140834	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01019294

When k=10, the MCC value is -0.01019294	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.03877834

When k=11, the MCC value is -0.03877834	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.09035079

When k=12, the MCC value is -0.09035079	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1540416

When k=15, the MCC value is 0.1540416	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.03138824

When k=16, the MCC value is 0.03138824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.1540416

When k=17, the MCC value is 0.1540416	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.03138824

When k=18, the MCC value is 0.03138824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.03138824

When k=19, the MCC value is 0.03138824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1100297

When k=20, the MCC value is -0.1100297	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.165748386032949
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3249885
ROC AUC 		0.4533493


TOTAL:

 FN =  20  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.13 	 0.55 	 0.09 	 0.82		 0.32		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=1, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1480391

When k=2, the MCC value is -0.1480391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1272938

When k=3, the MCC value is 0.1272938	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.05455447

When k=4, the MCC value is -0.05455447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2152569

When k=5, the MCC value is 0.2152569	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2781743

When k=6, the MCC value is 0.2781743	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=7, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=8, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=9, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=10, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=11, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1501879

When k=12, the MCC value is -0.1501879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=13, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.2836543

When k=14, the MCC value is 0.2836543	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=15, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.2836543

When k=16, the MCC value is 0.2836543	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=17, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=18, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 14, corresponding to MCC=0.283654314465588
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=14) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3380265
ROC AUC 		0.4541716


TOTAL:

 FN =  22  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  5  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.15 	 0.07 	 0.55 	 0.04 	 0.86		 0.34		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1901512

When k=1, the MCC value is -0.1901512	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.04882631

When k=2, the MCC value is -0.04882631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1099894

When k=3, the MCC value is -0.1099894	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.06205716

When k=4, the MCC value is -0.06205716	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04800288

When k=5, the MCC value is 0.04800288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.04475431

When k=6, the MCC value is -0.04475431	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01791436

When k=7, the MCC value is 0.01791436	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1612292

When k=8, the MCC value is -0.1612292	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=9, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=10, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=11, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=12, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=13, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=14, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=15, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=16, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=17, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=18, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=19, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.0480028756078704
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3739636
ROC AUC 		0.5201465


TOTAL:

 FN =  18  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  35  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.06 	 0.21 	 0.63 	 0.14 	 0.90		 0.37		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.01719798

When k=1, the MCC value is -0.01719798	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.08453302

When k=2, the MCC value is -0.08453302	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.08453302

When k=3, the MCC value is -0.08453302	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.06832298

When k=4, the MCC value is 0.06832298	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04413021

When k=5, the MCC value is 0.04413021	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1838924

When k=6, the MCC value is -0.1838924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.07881104

When k=7, the MCC value is 0.07881104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.01053157

When k=8, the MCC value is 0.01053157	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1170787

When k=9, the MCC value is 0.1170787	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1685051

When k=10, the MCC value is 0.1685051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1170787

When k=11, the MCC value is 0.1170787	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.2359874

When k=12, the MCC value is 0.2359874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.2359874

When k=13, the MCC value is 0.2359874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.2359874

When k=15, the MCC value is 0.2359874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 12, corresponding to MCC=0.235987441698123
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=12) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4124892
ROC AUC 		0.5069444


TOTAL:

 FN =  23  /  24 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  24 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  36 	 (truth == 0) & (prediction >= threshold)
 TN =  35  /  36 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.04 	 0.08 	 0.60 	 0.04 	 0.97		 0.41		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1016401

When k=1, the MCC value is 0.1016401	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.05281228

When k=2, the MCC value is 0.05281228	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.2376608

When k=3, the MCC value is 0.2376608	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.0490314

When k=4, the MCC value is 0.0490314	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.01791436

When k=5, the MCC value is 0.01791436	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.01014632

When k=6, the MCC value is -0.01014632	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08642212

When k=7, the MCC value is -0.08642212	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.03670808

When k=8, the MCC value is -0.03670808	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=9, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.09711481

When k=10, the MCC value is -0.09711481	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1153916

When k=11, the MCC value is 0.1153916	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.08742632

When k=12, the MCC value is 0.08742632	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=13, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.2052525

When k=14, the MCC value is -0.2052525	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=15, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=16, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=17, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=18, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=19, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=20, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=21, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=22, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=23, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.237660829944395
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3354713
ROC AUC 		0.5218228


TOTAL:

 FN =  14  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  9  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.05 	 0.30 	 0.62 	 0.26 	 0.78		 0.34		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1768131

When k=1, the MCC value is -0.1768131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1270761

When k=2, the MCC value is -0.1270761	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.2075143

When k=3, the MCC value is 0.2075143	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.006782818

When k=4, the MCC value is 0.006782818	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1544217

When k=5, the MCC value is 0.1544217	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.006782818

When k=6, the MCC value is 0.006782818	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=7, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=8, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=9, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=10, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=11, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1428212

When k=12, the MCC value is 0.1428212	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=14, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=17, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=18, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=24, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.207514339159822
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3004563
ROC AUC 		0.5555556


TOTAL:

 FN =  11  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.12 	 0.31 	 0.70 	 0.27 	 0.84		 0.30		0.56

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1430324

When k=1, the MCC value is 0.1430324	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.05330018

When k=2, the MCC value is 0.05330018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.03162278

When k=3, the MCC value is -0.03162278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.07342231

When k=4, the MCC value is 0.07342231	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.07342231

When k=5, the MCC value is 0.07342231	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=6, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=7, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=8, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=9, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=12, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.143032391922656
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4035017
ROC AUC 		0.4857143


TOTAL:

 FN =  20  /  25 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  25 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  35 	 (truth == 0) & (prediction >= threshold)
 TN =  27  /  35 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.03 	 0.26 	 0.53 	 0.20 	 0.77		 0.40		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.04388104

When k=1, the MCC value is -0.04388104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1566401

When k=2, the MCC value is 0.1566401	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.04784082

When k=3, the MCC value is 0.04784082	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1373494

When k=4, the MCC value is -0.1373494	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=5, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.07165744

When k=6, the MCC value is -0.07165744	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=7, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=8, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=9, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=10, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=11, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=18, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 10, corresponding to MCC=0.191244573949486
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=10) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3103321
ROC AUC 		0.4615385


TOTAL:

 FN =  21  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  36  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.17 	 0.00 	 0.60 	 0.00 	 0.92		 0.31		0.46

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.01033568

When k=1, the MCC value is -0.01033568	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1363636

When k=2, the MCC value is 0.1363636	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.04615931

When k=3, the MCC value is 0.04615931	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.01644879

When k=4, the MCC value is 0.01644879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2450577

When k=5, the MCC value is 0.2450577	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.005401382

When k=6, the MCC value is -0.005401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.07561935

When k=7, the MCC value is 0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1106244

When k=8, the MCC value is 0.1106244	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1226698

When k=9, the MCC value is 0.1226698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.08703883

When k=10, the MCC value is 0.08703883	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.0625

When k=11, the MCC value is 0.0625	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1740777

When k=12, the MCC value is 0.1740777	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1341763

When k=13, the MCC value is -0.1341763	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1226698

When k=14, the MCC value is 0.1226698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.02376242

When k=15, the MCC value is 0.02376242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.07537784

When k=16, the MCC value is 0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.03370999

When k=17, the MCC value is 0.03370999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.03370999

When k=18, the MCC value is 0.03370999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.03370999

When k=19, the MCC value is 0.03370999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1758816

When k=20, the MCC value is 0.1758816	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.09798119

When k=21, the MCC value is 0.09798119	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=22, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.1330564

When k=23, the MCC value is 0.1330564	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=24, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.1038961

When k=25, the MCC value is 0.1038961	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.1330564

When k=26, the MCC value is 0.1330564	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.09090909

When k=27, the MCC value is 0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.05025189

When k=28, the MCC value is 0.05025189	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0.2075143

When k=29, the MCC value is 0.2075143	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.03458572

When k=30, the MCC value is 0.03458572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=31, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0.03458572

When k=32, the MCC value is 0.03458572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.245057715725373
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.222911
ROC AUC 		0.4555556


TOTAL:

 FN =  12  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  13  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.09 	 0.19 	 0.58 	 0.20 	 0.71		 0.22		0.46

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1889134

When k=1, the MCC value is 0.1889134	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.09457083

When k=2, the MCC value is -0.09457083	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1686331

When k=3, the MCC value is -0.1686331	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.001386802

When k=4, the MCC value is 0.001386802	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.04320088

When k=5, the MCC value is -0.04320088	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.001386802

When k=6, the MCC value is 0.001386802	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.03427956

When k=7, the MCC value is -0.03427956	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=8, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=9, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=10, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=11, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=12, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=13, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=14, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=15, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=18, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.188913415447593
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2351676
ROC AUC 		0.3888889


TOTAL:

 FN =  16  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  14  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  28  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.23 	 0.12 	 0.50 	 0.11 	 0.67		 0.24		0.39

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1229863

When k=1, the MCC value is 0.1229863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1412198

When k=2, the MCC value is 0.1412198	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.03816816

When k=3, the MCC value is 0.03816816	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1941571

When k=4, the MCC value is 0.1941571	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=5, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03160698

When k=6, the MCC value is 0.03160698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1048285

When k=7, the MCC value is 0.1048285	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=8, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=9, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=10, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=11, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=13, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1774176

When k=15, the MCC value is 0.1774176	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1523123

When k=16, the MCC value is 0.1523123	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.1774176

When k=17, the MCC value is 0.1774176	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1774176

When k=18, the MCC value is 0.1774176	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=19, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.19415714480974
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.5303817
ROC AUC 		0.6116334


TOTAL:

 FN =  16  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  7  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.29 	 0.42 	 0.68 	 0.30 	 0.92		 0.53		0.61

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.07561935

When k=1, the MCC value is 0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.07561935

When k=2, the MCC value is 0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09869275

When k=3, the MCC value is 0.09869275	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1402752

When k=4, the MCC value is 0.1402752	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06534666

When k=5, the MCC value is -0.06534666	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.04269245

When k=6, the MCC value is -0.04269245	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.006493506

When k=7, the MCC value is 0.006493506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=8, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=9, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.04222003

When k=10, the MCC value is -0.04222003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.01478281

When k=11, the MCC value is -0.01478281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.07537784

When k=12, the MCC value is -0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=13, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=14, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=15, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.03458572

When k=16, the MCC value is 0.03458572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=17, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=18, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=19, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=20, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=21, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.2158939

When k=22, the MCC value is 0.2158939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=26, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 17, corresponding to MCC=0.215893884794186
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=17) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3043853
ROC AUC 		0.475


TOTAL:

 FN =  20  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.00 	 0.63 	 0.00 	 0.95		 0.30		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1014085

When k=1, the MCC value is 0.1014085	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1765259

When k=2, the MCC value is 0.1765259	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1038515

When k=3, the MCC value is 0.1038515	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.01354585

When k=4, the MCC value is 0.01354585	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=5, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.2103979

When k=6, the MCC value is -0.2103979	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.008016435

When k=7, the MCC value is -0.008016435	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.08404977

When k=8, the MCC value is 0.08404977	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=9, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.008016435

When k=10, the MCC value is -0.008016435	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=11, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1774176

When k=12, the MCC value is 0.1774176	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 12, corresponding to MCC=0.177417579677699
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=12) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.362778
ROC AUC 		0.4864865


TOTAL:

 FN =  23  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  36  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.10 	 0.00 	 0.60 	 0.00 	 0.97		 0.36		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.07412493

When k=1, the MCC value is -0.07412493	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.07715167

When k=2, the MCC value is -0.07715167	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.05230658

When k=3, the MCC value is -0.05230658	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.08164966

When k=4, the MCC value is -0.08164966	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1767767

When k=5, the MCC value is 0.1767767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=6, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06091449

When k=7, the MCC value is -0.06091449	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=8, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0

When k=9, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.08838835

When k=10, the MCC value is 0.08838835	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.03466876

When k=11, the MCC value is 0.03466876	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.06324555

When k=12, the MCC value is 0.06324555	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=13, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.09901475

When k=14, the MCC value is 0.09901475	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=17, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=19, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=21, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=22, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=34, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 21, corresponding to MCC=0.184114923579665
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=21) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2681402
ROC AUC 		0.4883721


TOTAL:

 FN =  17  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.08 	 0.00 	 0.70 	 0.00 	 0.98		 0.27		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.05230658

When k=1, the MCC value is -0.05230658	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.0446072

When k=2, the MCC value is -0.0446072	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08443506

When k=3, the MCC value is 0.08443506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.07978979

When k=4, the MCC value is 0.07978979	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2323484

When k=5, the MCC value is 0.2323484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.08443506

When k=6, the MCC value is 0.08443506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01654079

When k=7, the MCC value is 0.01654079	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=8, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=9, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.05697035

When k=10, the MCC value is -0.05697035	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=11, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.2767804

When k=12, the MCC value is 0.2767804	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=13, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=14, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=16, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=20, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 12, corresponding to MCC=0.276780395152733
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=12) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3833333
ROC AUC 		0.5


TOTAL:

 FN =  23  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.62 	 0.00 	 1.00		 0.38		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.04320088

When k=1, the MCC value is -0.04320088	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1077863

When k=2, the MCC value is -0.1077863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.006722775

When k=3, the MCC value is -0.006722775	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.001386802

When k=4, the MCC value is 0.001386802	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.09411884

When k=5, the MCC value is 0.09411884	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03381441

When k=6, the MCC value is 0.03381441	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.03427956

When k=7, the MCC value is -0.03427956	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=8, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=9, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=11, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=12, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=14, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=16, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=17, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=18, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=19, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=20, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.0941188434079151
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4120025
ROC AUC 		0.5549451


TOTAL:

 FN =  16  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  5  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.14 	 0.32 	 0.65 	 0.24 	 0.87		 0.41		0.55

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1896419

When k=1, the MCC value is 0.1896419	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.04029115

When k=2, the MCC value is 0.04029115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.0625

When k=3, the MCC value is 0.0625	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.02376242

When k=4, the MCC value is 0.02376242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.13484

When k=5, the MCC value is 0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2987013

When k=6, the MCC value is 0.2987013	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1330564

When k=7, the MCC value is 0.1330564	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.09090909

When k=8, the MCC value is 0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05025189

When k=9, the MCC value is 0.05025189	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.2272727

When k=10, the MCC value is 0.2272727	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.09798119

When k=11, the MCC value is 0.09798119	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=12, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=13, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=14, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=15, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.09798119

When k=16, the MCC value is 0.09798119	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=17, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=18, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.298701298701299
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2869551
ROC AUC 		0.3815789


TOTAL:

 FN =  22  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  9  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  29  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.32 	 0.00 	 0.48 	 0.00 	 0.76		 0.29		0.38

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.01644879

When k=1, the MCC value is 0.01644879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2302831

When k=2, the MCC value is -0.2302831	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.09759001

When k=3, the MCC value is -0.09759001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1454786

When k=4, the MCC value is -0.1454786	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.2161841

When k=5, the MCC value is -0.2161841	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.2161841

When k=6, the MCC value is -0.2161841	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=7, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1019638

When k=8, the MCC value is 0.1019638	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=9, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=10, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1749636

When k=11, the MCC value is -0.1749636	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=12, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=13, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=14, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=15, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=16, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=17, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=18, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=19, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=20, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=21, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=22, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 17, corresponding to MCC=0.198866846404498
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=17) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3
ROC AUC 		0.5


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.70 	 0.00 	 1.00		 0.30		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.02335709

When k=1, the MCC value is -0.02335709	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.02486824

When k=2, the MCC value is 0.02486824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.0899236

When k=3, the MCC value is -0.0899236	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.0269484

When k=4, the MCC value is -0.0269484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.02997453

When k=5, the MCC value is 0.02997453	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1740777

When k=6, the MCC value is -0.1740777	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1740777

When k=7, the MCC value is -0.1740777	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.06415003

When k=8, the MCC value is -0.06415003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1543033

When k=9, the MCC value is -0.1543033	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1044466

When k=10, the MCC value is 0.1044466	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.06415003

When k=11, the MCC value is -0.06415003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.03481553

When k=13, the MCC value is -0.03481553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1324532

When k=14, the MCC value is -0.1324532	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=19, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=20, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=21, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=26, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 10, corresponding to MCC=0.104446593573419
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=10) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3168659
ROC AUC 		0.4473684


TOTAL:

 FN =  22  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.20 	 0.00 	 0.57 	 0.00 	 0.89		 0.32		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.01504788

When k=1, the MCC value is 0.01504788	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.09036288

When k=2, the MCC value is 0.09036288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=3, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1602741

When k=4, the MCC value is 0.1602741	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=5, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.188594

When k=6, the MCC value is 0.188594	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1602741

When k=7, the MCC value is 0.1602741	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1157855

When k=8, the MCC value is 0.1157855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=9, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=10, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=11, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=12, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=13, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=14, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=15, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=16, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=17, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=19, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=20, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=21, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=22, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=25, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.188594049371332
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3355228
ROC AUC 		0.5198973


TOTAL:

 FN =  15  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.05 	 0.27 	 0.63 	 0.21 	 0.83		 0.34		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=1, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2110986

When k=2, the MCC value is -0.2110986	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=3, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1480391

When k=4, the MCC value is -0.1480391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.2099803

When k=5, the MCC value is -0.2099803	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.05455447

When k=6, the MCC value is -0.05455447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.09759001

When k=7, the MCC value is -0.09759001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.04199605

When k=8, the MCC value is 0.04199605	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1731542

When k=9, the MCC value is -0.1731542	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1497862

When k=10, the MCC value is -0.1497862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.19518

When k=11, the MCC value is -0.19518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.09698573

When k=12, the MCC value is -0.09698573	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.09698573

When k=13, the MCC value is -0.09698573	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1246224

When k=14, the MCC value is -0.1246224	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=15, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=16, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=17, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=18, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=19, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 19, corresponding to MCC=0.198866846404498
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=19) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.289166
ROC AUC 		0.4756098


TOTAL:

 FN =  19  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.00 	 0.65 	 0.00 	 0.95		 0.29		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.05066946

When k=1, the MCC value is 0.05066946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.05066946

When k=2, the MCC value is 0.05066946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=3, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.01791436

When k=4, the MCC value is 0.01791436	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=5, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=6, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01194291

When k=7, the MCC value is 0.01194291	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.08742632

When k=8, the MCC value is 0.08742632	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=9, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=10, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=11, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.131372

When k=12, the MCC value is 0.131372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=13, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=14, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=17, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.183647

When k=18, the MCC value is 0.183647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.2727823

When k=19, the MCC value is 0.2727823	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=20, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=24, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=25, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 19, corresponding to MCC=0.272782263608511
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=19) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2659989
ROC AUC 		0.4642857


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.15 	 0.00 	 0.65 	 0.00 	 0.93		 0.27		0.46

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.06732372

When k=1, the MCC value is -0.06732372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.003593474

When k=2, the MCC value is -0.003593474	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.03427956

When k=3, the MCC value is 0.03427956	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.06939668

When k=4, the MCC value is 0.06939668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.148803

When k=5, the MCC value is 0.148803	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.04320088

When k=6, the MCC value is -0.04320088	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.07998564

When k=7, the MCC value is 0.07998564	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1336926

When k=8, the MCC value is 0.1336926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=9, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=10, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=11, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.14880304751762
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2891641
ROC AUC 		0.4212454


TOTAL:

 FN =  20  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.21 	 0.07 	 0.53 	 0.05 	 0.79		 0.29		0.42

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.07165744

When k=1, the MCC value is -0.07165744	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.07537784

When k=2, the MCC value is 0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=3, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0

When k=4, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.07537784

When k=5, the MCC value is 0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1118034

When k=6, the MCC value is 0.1118034	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.210042

When k=7, the MCC value is -0.210042	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.210042

When k=8, the MCC value is -0.210042	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1961161

When k=9, the MCC value is -0.1961161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1961161

When k=10, the MCC value is -0.1961161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1507557

When k=11, the MCC value is -0.1507557	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1507557

When k=12, the MCC value is -0.1507557	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=13, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=14, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=15, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=16, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=17, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=18, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09284767

When k=19, the MCC value is -0.09284767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=20, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=21, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=24, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=25, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.06509446

When k=26, the MCC value is -0.06509446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.111803398874989
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3787212
ROC AUC 		0.529304


TOTAL:

 FN =  16  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.07 	 0.30 	 0.62 	 0.24 	 0.82		 0.38		0.53

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.06698565

When k=1, the MCC value is 0.06698565	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.09426479

When k=2, the MCC value is 0.09426479	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.2165409

When k=3, the MCC value is 0.2165409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1198085

When k=4, the MCC value is 0.1198085	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.06780158

When k=5, the MCC value is 0.06780158	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.09495946

When k=6, the MCC value is -0.09495946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2294157

When k=7, the MCC value is -0.2294157	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=8, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.2294157

When k=9, the MCC value is -0.2294157	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=10, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1745592

When k=11, the MCC value is -0.1745592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=12, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=13, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=14, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=15, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=16, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=17, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=18, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=19, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=20, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=21, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=22, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=23, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=24, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.216540878711411
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2152266
ROC AUC 		0.4444444


TOTAL:

 FN =  13  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  11  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.12 	 0.14 	 0.60 	 0.13 	 0.76		 0.22		0.44

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1211965

When k=1, the MCC value is -0.1211965	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1539403

When k=2, the MCC value is -0.1539403	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1678031

When k=3, the MCC value is 0.1678031	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.09895656

When k=4, the MCC value is 0.09895656	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.148803

When k=5, the MCC value is 0.148803	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1992937

When k=6, the MCC value is 0.1992937	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.09411884

When k=7, the MCC value is 0.09411884	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.09411884

When k=8, the MCC value is 0.09411884	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.03381441

When k=9, the MCC value is 0.03381441	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.03381441

When k=10, the MCC value is 0.03381441	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=11, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.01033568

When k=12, the MCC value is 0.01033568	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=13, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=14, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=15, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=16, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=17, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=18, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=19, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=20, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=21, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=22, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=23, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=24, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=25, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=26, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=27, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=28, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=29, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=30, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=31, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=32, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=33, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=34, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=39, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=40, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=41, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=42, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=44, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.199293699971709
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2282159
ROC AUC 		0.4131327


TOTAL:

 FN =  16  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  10  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  33  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.20 	 0.07 	 0.57 	 0.06 	 0.77		 0.23		0.41

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1549193

When k=1, the MCC value is 0.1549193	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=2, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1266463

When k=3, the MCC value is -0.1266463	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.01654079

When k=4, the MCC value is 0.01654079	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=5, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.06324555

When k=6, the MCC value is 0.06324555	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=7, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=8, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=9, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.2

When k=10, the MCC value is -0.2	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.09631427

When k=11, the MCC value is -0.09631427	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1549193

When k=12, the MCC value is -0.1549193	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1266463

When k=13, the MCC value is -0.1266463	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1266463

When k=14, the MCC value is -0.1266463	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1118034

When k=15, the MCC value is -0.1118034	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08

When k=16, the MCC value is -0.08	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1625272

When k=17, the MCC value is -0.1625272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1490712

When k=18, the MCC value is -0.1490712	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=19, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=20, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08304548

When k=21, the MCC value is -0.08304548	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=22, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.05822225

When k=23, the MCC value is -0.05822225	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.05822225

When k=24, the MCC value is -0.05822225	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.05822225

When k=25, the MCC value is -0.05822225	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.05822225

When k=27, the MCC value is -0.05822225	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.05822225

When k=29, the MCC value is -0.05822225	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.1025978

When k=30, the MCC value is 0.1025978	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.08304548

When k=31, the MCC value is -0.08304548	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.08304548

When k=32, the MCC value is -0.08304548	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.1195229

When k=33, the MCC value is -0.1195229	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=34, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.02321817

When k=35, the MCC value is -0.02321817	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=37, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=38, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=39, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=40, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = -0.13484

When k=41, the MCC value is -0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = -0.1195229

When k=42, the MCC value is -0.1195229	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = -0.1025978

When k=43, the MCC value is -0.1025978	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = -0.1025978

When k=44, the MCC value is -0.1025978	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.154919333848297
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4578123
ROC AUC 		0.5084175


TOTAL:

 FN =  20  /  27 	 (truth == 1) & (prediction < threshold)
 TP =  7  /  27 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  33 	 (truth == 0) & (prediction >= threshold)
 TN =  25  /  33 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.02 	 0.33 	 0.53 	 0.26 	 0.76		 0.46		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1753785

When k=1, the MCC value is -0.1753785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1264279

When k=2, the MCC value is -0.1264279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=3, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1578303

When k=4, the MCC value is -0.1578303	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=5, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.08318057

When k=6, the MCC value is 0.08318057	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=7, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1683451

When k=8, the MCC value is -0.1683451	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=9, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=10, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=11, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1961161

When k=12, the MCC value is -0.1961161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1683451

When k=13, the MCC value is -0.1683451	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=14, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.008016435

When k=15, the MCC value is -0.008016435	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=16, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=17, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=18, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=19, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=20, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=21, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=22, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=23, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=24, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=25, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=26, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=27, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=28, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=30, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.0831805681575145
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2923973
ROC AUC 		0.45


TOTAL:

 FN =  18  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.13 	 0.57 	 0.10 	 0.80		 0.29		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.0244558

When k=1, the MCC value is -0.0244558	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.02665009

When k=2, the MCC value is -0.02665009	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.02860648

When k=3, the MCC value is -0.02860648	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.05572782

When k=4, the MCC value is -0.05572782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.08838835

When k=5, the MCC value is 0.08838835	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.06324555

When k=6, the MCC value is 0.06324555	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=7, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.03466876

When k=8, the MCC value is 0.03466876	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=9, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=11, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=12, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=13, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=14, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=15, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=16, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=17, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=18, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 11, corresponding to MCC=0.0944911182523068
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=11) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2635028
ROC AUC 		0.4971591


TOTAL:

 FN =  15  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.01 	 0.10 	 0.70 	 0.06 	 0.93		 0.26		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2876862

When k=1, the MCC value is -0.2876862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.01504788

When k=2, the MCC value is 0.01504788	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=3, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.2776029

When k=4, the MCC value is -0.2776029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1491108

When k=5, the MCC value is -0.1491108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1491108

When k=6, the MCC value is -0.1491108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1067704

When k=7, the MCC value is -0.1067704	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.06134859

When k=8, the MCC value is -0.06134859	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.05697035

When k=9, the MCC value is -0.05697035	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=10, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.0111518

When k=11, the MCC value is -0.0111518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=12, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=13, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.01654079

When k=14, the MCC value is 0.01654079	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.246623

When k=15, the MCC value is -0.246623	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=16, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=17, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=18, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=19, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=20, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=21, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=22, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1951607

When k=24, the MCC value is 0.1951607	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.2953322

When k=25, the MCC value is 0.2953322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=26, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 25, corresponding to MCC=0.295332177953378
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=25) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.35
ROC AUC 		0.5


TOTAL:

 FN =  21  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.65 	 0.00 	 1.00		 0.35		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09895656

When k=1, the MCC value is 0.09895656	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.003593474

When k=2, the MCC value is -0.003593474	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.01919483

When k=3, the MCC value is -0.01919483	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1077863

When k=4, the MCC value is -0.1077863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1136924

When k=5, the MCC value is -0.1136924	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1075644

When k=6, the MCC value is -0.1075644	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.006722775

When k=7, the MCC value is -0.006722775	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.03381441

When k=8, the MCC value is 0.03381441	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=9, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.07329278

When k=10, the MCC value is -0.07329278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=11, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=12, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1808782

When k=13, the MCC value is -0.1808782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=14, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=15, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=16, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=17, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=18, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=19, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=20, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.0989565616659599
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2601048
ROC AUC 		0.3998716


TOTAL:

 FN =  14  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  19  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  22  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.19 	 0.23 	 0.45 	 0.26 	 0.54		 0.26		0.40

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.003877222

When k=1, the MCC value is 0.003877222	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.003877222

When k=2, the MCC value is 0.003877222	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.00807108

When k=3, the MCC value is -0.00807108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1285418

When k=4, the MCC value is 0.1285418	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2079867

When k=5, the MCC value is 0.2079867	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1479453

When k=6, the MCC value is 0.1479453	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=7, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.0554795

When k=8, the MCC value is 0.0554795	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=9, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.0446072

When k=10, the MCC value is -0.0446072	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=11, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1067704

When k=12, the MCC value is -0.1067704	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=13, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.05697035

When k=14, the MCC value is -0.05697035	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=15, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=16, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=17, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.07978979

When k=18, the MCC value is 0.07978979	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=19, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1895806

When k=20, the MCC value is -0.1895806	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=21, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=22, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=23, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=24, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=25, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=27, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=28, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.207986672400773
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2729946
ROC AUC 		0.5687398


TOTAL:

 FN =  9  /  13 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  13 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  47 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  47 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.14 	 0.32 	 0.72 	 0.31 	 0.83		 0.27		0.57

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1448

When k=1, the MCC value is -0.1448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=2, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08011545

When k=3, the MCC value is 0.08011545	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.04784082

When k=4, the MCC value is 0.04784082	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.154585

When k=5, the MCC value is 0.154585	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.08011545

When k=6, the MCC value is 0.08011545	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01194291

When k=7, the MCC value is 0.01194291	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=8, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=9, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=10, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=11, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=12, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=13, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 9, corresponding to MCC=0.191244573949486
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=9) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.289166
ROC AUC 		0.4756098


TOTAL:

 FN =  19  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.00 	 0.65 	 0.00 	 0.95		 0.29		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.001283697

When k=1, the MCC value is -0.001283697	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1034286

When k=2, the MCC value is 0.1034286	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1566401

When k=3, the MCC value is 0.1566401	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1285418

When k=4, the MCC value is 0.1285418	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1327138

When k=5, the MCC value is 0.1327138	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.08011545

When k=6, the MCC value is 0.08011545	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1153916

When k=7, the MCC value is 0.1153916	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=8, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05401382

When k=9, the MCC value is 0.05401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=10, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=11, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.131372

When k=12, the MCC value is 0.131372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.131372

When k=13, the MCC value is 0.131372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.01194291

When k=14, the MCC value is 0.01194291	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=15, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=16, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.05401382

When k=17, the MCC value is 0.05401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1990344

When k=18, the MCC value is 0.1990344	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=19, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=20, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=21, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=22, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=23, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=24, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=25, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=26, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 18, corresponding to MCC=0.199034377130584
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=18) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.220491
ROC AUC 		0.4318182


TOTAL:

 FN =  16  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.20 	 0.00 	 0.63 	 0.00 	 0.86		 0.22		0.43

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1526413

When k=1, the MCC value is 0.1526413	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.05884316

When k=2, the MCC value is 0.05884316	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.06105044

When k=3, the MCC value is -0.06105044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1085251

When k=4, the MCC value is 0.1085251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.02085598

When k=5, the MCC value is 0.02085598	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.02085598

When k=6, the MCC value is 0.02085598	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.02085598

When k=7, the MCC value is 0.02085598	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1459918

When k=8, the MCC value is 0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=9, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=10, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=12, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.152641262793307
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.267996
ROC AUC 		0.4484127


TOTAL:

 FN =  13  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  16  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  26  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.10 	 0.26 	 0.52 	 0.28 	 0.62		 0.27		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1077051

When k=1, the MCC value is -0.1077051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.09909575

When k=2, the MCC value is -0.09909575	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1126107

When k=3, the MCC value is 0.1126107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0

When k=4, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0

When k=5, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1170161

When k=6, the MCC value is -0.1170161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1077051

When k=7, the MCC value is -0.1077051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.01651596

When k=8, the MCC value is -0.01651596	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.2182179

When k=9, the MCC value is -0.2182179	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.0379049

When k=10, the MCC value is 0.0379049	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=11, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=12, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=13, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.0379049

When k=14, the MCC value is 0.0379049	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.112610654115363
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2971833
ROC AUC 		0.4322344


TOTAL:

 FN =  19  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  9  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  30  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.17 	 0.12 	 0.53 	 0.10 	 0.77		 0.30		0.43

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.07715167

When k=1, the MCC value is 0.07715167	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1865506

When k=2, the MCC value is -0.1865506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.03466876

When k=3, the MCC value is 0.03466876	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=4, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=5, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1705606

When k=6, the MCC value is 0.1705606	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=7, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=8, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=9, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1622214

When k=10, the MCC value is 0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=11, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=12, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=14, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=15, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 11, corresponding to MCC=0.184114923579665
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=11) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.35
ROC AUC 		0.5


TOTAL:

 FN =  21  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.65 	 0.00 	 1.00		 0.35		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02925403

When k=1, the MCC value is 0.02925403	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.3156455

When k=2, the MCC value is -0.3156455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.005401382

When k=3, the MCC value is -0.005401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1404359

When k=4, the MCC value is 0.1404359	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.131372

When k=5, the MCC value is 0.131372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=6, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=7, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=8, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=9, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=10, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=11, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=12, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=13, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=14, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=15, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=16, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=17, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=18, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=19, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 18, corresponding to MCC=0.191244573949486
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=18) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2635028
ROC AUC 		0.4971591


TOTAL:

 FN =  15  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.01 	 0.10 	 0.70 	 0.06 	 0.93		 0.26		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.06900656

When k=1, the MCC value is -0.06900656	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.07216878

When k=2, the MCC value is -0.07216878	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09059765

When k=3, the MCC value is 0.09059765	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1170161

When k=4, the MCC value is -0.1170161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.0527535

When k=5, the MCC value is 0.0527535	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.0381108

When k=6, the MCC value is 0.0381108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08183171

When k=7, the MCC value is -0.08183171	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1230915

When k=8, the MCC value is -0.1230915	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1230915

When k=9, the MCC value is -0.1230915	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1200961

When k=10, the MCC value is -0.1200961	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08183171

When k=11, the MCC value is -0.08183171	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.2182179

When k=12, the MCC value is -0.2182179	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=13, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=14, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=15, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=16, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.0905976508333704
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2410627
ROC AUC 		0.4888889


TOTAL:

 FN =  13  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.03 	 0.17 	 0.67 	 0.13 	 0.84		 0.24		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.06703146

When k=1, the MCC value is -0.06703146	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.01790879

When k=2, the MCC value is -0.01790879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1501946

When k=3, the MCC value is 0.1501946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.02842983

When k=4, the MCC value is 0.02842983	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=5, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=6, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2095892

When k=7, the MCC value is -0.2095892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=8, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=9, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=10, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=11, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=12, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=13, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=14, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=15, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=16, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=17, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=18, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=19, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=20, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=21, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=22, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=24, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=25, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=26, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=27, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=28, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=29, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=30, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.150194566373195
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3452567
ROC AUC 		0.5125


TOTAL:

 FN =  16  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  33  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.03 	 0.26 	 0.62 	 0.20 	 0.82		 0.35		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.09236218

When k=1, the MCC value is -0.09236218	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.2330311

When k=2, the MCC value is 0.2330311	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.006493506

When k=3, the MCC value is 0.006493506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.04007863

When k=4, the MCC value is -0.04007863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.05913124

When k=5, the MCC value is -0.05913124	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.13484

When k=6, the MCC value is 0.13484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.04604703

When k=7, the MCC value is 0.04604703	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.08893472

When k=8, the MCC value is 0.08893472	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.08798311

When k=9, the MCC value is -0.08798311	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.06168397

When k=10, the MCC value is -0.06168397	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08798311

When k=11, the MCC value is -0.08798311	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.06168397

When k=12, the MCC value is -0.06168397	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.08798311

When k=13, the MCC value is -0.08798311	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.06168397

When k=14, the MCC value is -0.06168397	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.06168397

When k=21, the MCC value is -0.06168397	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.06168397

When k=22, the MCC value is -0.06168397	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 2, corresponding to MCC=0.233031073516907
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=2) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.5250743
ROC AUC 		0.5411568


TOTAL:

 FN =  21  /  29 	 (truth == 1) & (prediction < threshold)
 TP =  8  /  29 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  31 	 (truth == 0) & (prediction >= threshold)
 TN =  25  /  31 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.10 	 0.37 	 0.55 	 0.28 	 0.81		 0.53		0.54

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.06732372

When k=1, the MCC value is -0.06732372	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.04528334

When k=2, the MCC value is -0.04528334	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1259882

When k=3, the MCC value is -0.1259882	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.02819793

When k=4, the MCC value is -0.02819793	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=5, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=6, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=7, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.04279605

When k=8, the MCC value is -0.04279605	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=9, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=10, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=11, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=12, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=13, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=14, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=15, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=16, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=17, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=18, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=19, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.2836543

When k=20, the MCC value is 0.2836543	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=21, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=22, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=23, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.2836543

When k=24, the MCC value is 0.2836543	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 20, corresponding to MCC=0.283654314465588
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=20) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3
ROC AUC 		0.5


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.70 	 0.00 	 1.00		 0.30		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1650295

When k=1, the MCC value is -0.1650295	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.3314458

When k=2, the MCC value is -0.3314458	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1686331

When k=3, the MCC value is -0.1686331	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.06939668

When k=4, the MCC value is 0.06939668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.05280108

When k=5, the MCC value is 0.05280108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.03427956

When k=6, the MCC value is -0.03427956	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2107167

When k=7, the MCC value is -0.2107167	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.2107167

When k=8, the MCC value is -0.2107167	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1808782

When k=9, the MCC value is -0.1808782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.02359281

When k=10, the MCC value is -0.02359281	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=11, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=12, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1464077

When k=13, the MCC value is -0.1464077	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=14, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=15, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.04455888

When k=16, the MCC value is 0.04455888	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=17, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.0693966802220187
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3146955
ROC AUC 		0.475


TOTAL:

 FN =  15  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  12  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  28  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.05 	 0.27 	 0.55 	 0.25 	 0.70		 0.31		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1765259

When k=1, the MCC value is 0.1765259	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1511778

When k=2, the MCC value is 0.1511778	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.3068036

When k=3, the MCC value is 0.3068036	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1798247

When k=4, the MCC value is 0.1798247	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04800288

When k=5, the MCC value is 0.04800288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.02068572

When k=6, the MCC value is 0.02068572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1373494

When k=7, the MCC value is -0.1373494	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.01014632

When k=8, the MCC value is -0.01014632	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1616116

When k=9, the MCC value is -0.1616116	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1856299

When k=10, the MCC value is -0.1856299	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1856299

When k=11, the MCC value is -0.1856299	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.2083002

When k=12, the MCC value is -0.2083002	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.08528941

When k=13, the MCC value is -0.08528941	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1357898

When k=14, the MCC value is -0.1357898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=15, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1357898

When k=16, the MCC value is -0.1357898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=17, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=18, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=19, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=20, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=21, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=22, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=23, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=24, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=25, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=26, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=27, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=28, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=42, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.306803594351733
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2894317
ROC AUC 		0.5068399


TOTAL:

 FN =  14  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  36  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.02 	 0.22 	 0.65 	 0.18 	 0.84		 0.29		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1753785

When k=1, the MCC value is -0.1753785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2375655

When k=2, the MCC value is -0.2375655	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.2939724

When k=3, the MCC value is -0.2939724	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.2161841

When k=4, the MCC value is -0.2161841	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1454786

When k=5, the MCC value is -0.1454786	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1677349

When k=6, the MCC value is -0.1677349	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08878188

When k=7, the MCC value is -0.08878188	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.07945336

When k=8, the MCC value is -0.07945336	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.122191

When k=9, the MCC value is -0.122191	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1019638

When k=10, the MCC value is 0.1019638	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.05455447

When k=12, the MCC value is -0.05455447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.01132931

When k=13, the MCC value is -0.01132931	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.132412

When k=14, the MCC value is 0.132412	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1454786

When k=15, the MCC value is 0.1454786	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=16, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=17, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1501879

When k=18, the MCC value is -0.1501879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=19, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=20, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=21, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=22, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=23, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=24, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.1501879

When k=25, the MCC value is -0.1501879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=26, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.02916059

When k=27, the MCC value is -0.02916059	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=28, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0.3504383

When k=29, the MCC value is 0.3504383	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.2624453

When k=30, the MCC value is 0.2624453	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0.1973855

When k=31, the MCC value is 0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0.1973855

When k=32, the MCC value is 0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0.1973855

When k=33, the MCC value is 0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=34, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=35, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 29, corresponding to MCC=0.350438322025231
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=29) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3154591
ROC AUC 		0.4875


TOTAL:

 FN =  20  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.09 	 0.00 	 0.65 	 0.00 	 0.98		 0.32		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1914492

When k=1, the MCC value is -0.1914492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.03930413

When k=2, the MCC value is -0.03930413	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.03381441

When k=3, the MCC value is 0.03381441	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1992937

When k=4, the MCC value is 0.1992937	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.107312

When k=5, the MCC value is 0.107312	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.06939668

When k=6, the MCC value is 0.06939668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.01533028

When k=7, the MCC value is 0.01533028	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.07665142

When k=8, the MCC value is -0.07665142	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.01033568

When k=9, the MCC value is 0.01033568	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=10, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.199293699971709
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3230022
ROC AUC 		0.5568182


TOTAL:

 FN =  12  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.13 	 0.31 	 0.70 	 0.25 	 0.86		 0.32		0.56

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.2465797

When k=1, the MCC value is 0.2465797	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.06718189

When k=2, the MCC value is 0.06718189	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1949605

When k=3, the MCC value is 0.1949605	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1323788

When k=4, the MCC value is 0.1323788	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2473791

When k=5, the MCC value is 0.2473791	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2473791

When k=6, the MCC value is 0.2473791	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.2583919

When k=7, the MCC value is 0.2583919	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1343638

When k=8, the MCC value is 0.1343638	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.290978

When k=9, the MCC value is 0.290978	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1651243

When k=10, the MCC value is 0.1651243	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=11, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.06413118

When k=12, the MCC value is 0.06413118	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.2355255

When k=13, the MCC value is 0.2355255	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1808782

When k=14, the MCC value is -0.1808782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=17, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1026448

When k=18, the MCC value is -0.1026448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.1651243

When k=27, the MCC value is 0.1651243	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 9, corresponding to MCC=0.290977992672435
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=9) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2480524
ROC AUC 		0.4285714


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  36  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.22 	 0.00 	 0.60 	 0.00 	 0.86		 0.25		0.43

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1226698

When k=1, the MCC value is 0.1226698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1226698

When k=2, the MCC value is 0.1226698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=3, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.02842983

When k=4, the MCC value is 0.02842983	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1157855

When k=5, the MCC value is 0.1157855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=6, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=7, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=8, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=9, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.2095892

When k=10, the MCC value is -0.2095892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=11, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=12, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=13, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=14, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=15, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=16, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=17, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=18, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=19, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=21, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=22, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=24, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=25, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 11, corresponding to MCC=0.128505183463769
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=11) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3744099
ROC AUC 		0.5059809


TOTAL:

 FN =  20  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  35  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.02 	 0.15 	 0.62 	 0.09 	 0.92		 0.37		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1643435

When k=1, the MCC value is -0.1643435	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.09036288

When k=2, the MCC value is 0.09036288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.06534666

When k=3, the MCC value is -0.06534666	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.08453302

When k=4, the MCC value is -0.08453302	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1004648

When k=5, the MCC value is -0.1004648	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.05770874

When k=6, the MCC value is -0.05770874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.09883896

When k=7, the MCC value is -0.09883896	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.05770874

When k=8, the MCC value is -0.05770874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.04413021

When k=9, the MCC value is 0.04413021	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.01545612

When k=10, the MCC value is 0.01545612	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.02376242

When k=11, the MCC value is -0.02376242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.2004916

When k=12, the MCC value is -0.2004916	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1188121

When k=13, the MCC value is 0.1188121	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1685051

When k=14, the MCC value is 0.1685051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.01545612

When k=15, the MCC value is 0.01545612	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.02376242

When k=16, the MCC value is -0.02376242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.01053157

When k=17, the MCC value is 0.01053157	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.05424148

When k=18, the MCC value is 0.05424148	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=19, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.147442

When k=20, the MCC value is -0.147442	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=21, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.147442

When k=22, the MCC value is -0.147442	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1265634

When k=23, the MCC value is -0.1265634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=24, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=27, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=28, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=29, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=30, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=31, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.1024439

When k=32, the MCC value is -0.1024439	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.07182226

When k=33, the MCC value is -0.07182226	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.07182226

When k=36, the MCC value is -0.07182226	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 14, corresponding to MCC=0.168505092748454
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=14) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4200769
ROC AUC 		0.5028571


TOTAL:

 FN =  22  /  25 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  25 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  35 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  35 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.01 	 0.19 	 0.57 	 0.12 	 0.89		 0.42		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.05472927

When k=1, the MCC value is -0.05472927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1111111

When k=2, the MCC value is -0.1111111	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.3273268

When k=3, the MCC value is -0.3273268	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.2161841

When k=4, the MCC value is -0.2161841	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.2379155

When k=5, the MCC value is -0.2379155	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.2567763

When k=6, the MCC value is -0.2567763	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1749636

When k=7, the MCC value is -0.1749636	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1973855

When k=8, the MCC value is -0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1501879

When k=9, the MCC value is -0.1501879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=10, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1501879

When k=11, the MCC value is -0.1501879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1749636

When k=12, the MCC value is -0.1749636	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=13, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=14, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=15, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=16, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=27, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=28, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 17, corresponding to MCC=0
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=17) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3833333
ROC AUC 		0.5


TOTAL:

 FN =  23  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.62 	 0.00 	 1.00		 0.38		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.05884316

When k=1, the MCC value is 0.05884316	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=2, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08142165

When k=3, the MCC value is 0.08142165	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1914492

When k=4, the MCC value is -0.1914492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.08878188

When k=5, the MCC value is -0.08878188	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.05230658

When k=6, the MCC value is -0.05230658	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.05230658

When k=7, the MCC value is -0.05230658	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.08878188

When k=8, the MCC value is -0.08878188	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.06703146

When k=9, the MCC value is -0.06703146	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1067387

When k=10, the MCC value is -0.1067387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.0111518

When k=11, the MCC value is -0.0111518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1067387

When k=12, the MCC value is -0.1067387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=13, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.0111518

When k=14, the MCC value is -0.0111518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=15, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=16, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=17, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.151127

When k=18, the MCC value is -0.151127	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=19, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1067387

When k=20, the MCC value is -0.1067387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1067387

When k=21, the MCC value is -0.1067387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1378187

When k=22, the MCC value is -0.1378187	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=23, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=24, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=25, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=26, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=27, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=28, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=29, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=34, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=35, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=36, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=38, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=39, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.1680452

When k=40, the MCC value is -0.1680452	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=41, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=42, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=43, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=44, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=45, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=48, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 23, corresponding to MCC=0.128505183463769
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=23) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4897799
ROC AUC 		0.5789474


TOTAL:

 FN =  16  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.34 	 0.27 	 0.73 	 0.16 	 1.00		 0.49		0.58

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.08838835

When k=1, the MCC value is 0.08838835	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.05572782

When k=2, the MCC value is -0.05572782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0

When k=3, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.121829

When k=4, the MCC value is 0.121829	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06091449

When k=5, the MCC value is -0.06091449	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=6, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0

When k=7, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=8, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=9, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=10, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=11, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=12, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=13, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=14, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=15, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=16, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=17, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=18, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=19, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=20, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=21, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.121828980774635
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3456465
ROC AUC 		0.4571093


TOTAL:

 FN =  20  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  29  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.11 	 0.18 	 0.53 	 0.13 	 0.78		 0.35		0.46

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.005401382

When k=1, the MCC value is -0.005401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.04388104

When k=2, the MCC value is -0.04388104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.01014632

When k=3, the MCC value is -0.01014632	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.02068572

When k=4, the MCC value is 0.02068572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.03670808

When k=5, the MCC value is -0.03670808	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.03670808

When k=6, the MCC value is -0.03670808	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.07165744

When k=7, the MCC value is -0.07165744	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.3044387

When k=8, the MCC value is -0.3044387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=9, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.05401382

When k=10, the MCC value is 0.05401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.2052525

When k=11, the MCC value is -0.2052525	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.2670104

When k=12, the MCC value is -0.2670104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=13, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.2052525

When k=14, the MCC value is -0.2052525	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.2052525

When k=15, the MCC value is -0.2052525	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=16, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=17, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=18, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=21, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=22, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 10, corresponding to MCC=0.0540138249873626
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=10) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.311784
ROC AUC 		0.475


TOTAL:

 FN =  17  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.06 	 0.19 	 0.58 	 0.15 	 0.80		 0.31		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.01509961

When k=1, the MCC value is 0.01509961	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=2, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.02135407

When k=3, the MCC value is -0.02135407	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.0490314

When k=4, the MCC value is 0.0490314	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06134859

When k=5, the MCC value is -0.06134859	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.151127

When k=6, the MCC value is -0.151127	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06134859

When k=7, the MCC value is -0.06134859	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=8, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=9, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=10, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=11, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1602741

When k=12, the MCC value is 0.1602741	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=13, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=14, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=15, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=16, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=19, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=20, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=21, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=22, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=24, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=25, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 12, corresponding to MCC=0.160274122981984
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=12) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3097128
ROC AUC 		0.475


TOTAL:

 FN =  18  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.07 	 0.14 	 0.60 	 0.10 	 0.85		 0.31		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.09466074

When k=1, the MCC value is -0.09466074	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1067704

When k=2, the MCC value is -0.1067704	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1605528

When k=3, the MCC value is -0.1605528	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.06134859

When k=4, the MCC value is -0.06134859	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=5, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=6, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=7, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=8, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=9, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=10, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=12, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=13, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=14, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 9, corresponding to MCC=0.0892864724045096
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=9) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3899812
ROC AUC 		0.4930556


TOTAL:

 FN =  23  /  24 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  24 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  36 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  36 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.03 	 0.07 	 0.58 	 0.04 	 0.94		 0.39		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09712722

When k=1, the MCC value is 0.09712722	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.01790879

When k=2, the MCC value is -0.01790879	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.0111518

When k=3, the MCC value is -0.0111518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.02901447

When k=4, the MCC value is -0.02901447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.02901447

When k=5, the MCC value is -0.02901447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=6, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=7, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=8, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=9, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=10, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=11, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=12, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=13, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=14, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=15, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1951607

When k=16, the MCC value is 0.1951607	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=17, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=18, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=19, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=20, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=21, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=22, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=23, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 18, corresponding to MCC=0.207054065022816
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=18) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2527795
ROC AUC 		0.4857955


TOTAL:

 FN =  15  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  40  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.05 	 0.10 	 0.68 	 0.06 	 0.91		 0.25		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.01467892

When k=1, the MCC value is 0.01467892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.01484785

When k=2, the MCC value is -0.01484785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09869275

When k=3, the MCC value is 0.09869275	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1259882

When k=4, the MCC value is 0.1259882	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.29277

When k=5, the MCC value is 0.29277	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.132412

When k=6, the MCC value is 0.132412	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.132412

When k=7, the MCC value is 0.132412	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.132412

When k=8, the MCC value is 0.132412	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=9, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=10, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=11, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1973855

When k=12, the MCC value is 0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=13, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=14, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=15, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1988668

When k=18, the MCC value is 0.1988668	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.29277002188456
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4111118
ROC AUC 		0.5912698


TOTAL:

 FN =  13  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  38  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.23 	 0.37 	 0.72 	 0.28 	 0.90		 0.41		0.59

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.09325048

When k=1, the MCC value is 0.09325048	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.01090295

When k=2, the MCC value is -0.01090295	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09036288

When k=3, the MCC value is 0.09036288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.01719798

When k=4, the MCC value is -0.01719798	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.002914932

When k=5, the MCC value is 0.002914932	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.09036288

When k=6, the MCC value is 0.09036288	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.01103575

When k=7, the MCC value is -0.01103575	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.04413021

When k=8, the MCC value is 0.04413021	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1188121

When k=9, the MCC value is 0.1188121	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.07881104

When k=10, the MCC value is 0.07881104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.07881104

When k=11, the MCC value is 0.07881104	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.01545612

When k=12, the MCC value is 0.01545612	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.2613867

When k=13, the MCC value is 0.2613867	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.2101628

When k=14, the MCC value is 0.2101628	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1685051

When k=15, the MCC value is 0.1685051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1188121

When k=16, the MCC value is 0.1188121	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.3366014

When k=17, the MCC value is 0.3366014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.3366014

When k=18, the MCC value is 0.3366014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.3366014

When k=19, the MCC value is 0.3366014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.3366014

When k=21, the MCC value is 0.3366014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.2359874

When k=22, the MCC value is 0.2359874	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 17, corresponding to MCC=0.336601385337074
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=17) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.289166
ROC AUC 		0.4756098


TOTAL:

 FN =  19  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.13 	 0.00 	 0.65 	 0.00 	 0.95		 0.29		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1141228

When k=1, the MCC value is 0.1141228	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1336306

When k=2, the MCC value is 0.1336306	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.01701035

When k=3, the MCC value is 0.01701035	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.07856742

When k=4, the MCC value is 0.07856742	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.0527535

When k=5, the MCC value is 0.0527535	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0

When k=6, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.06804138

When k=7, the MCC value is 0.06804138	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.06804138

When k=8, the MCC value is 0.06804138	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0

When k=9, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.05455447

When k=11, the MCC value is 0.05455447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1248781

When k=12, the MCC value is 0.1248781	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1248781

When k=13, the MCC value is 0.1248781	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=18, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.0379049

When k=24, the MCC value is 0.0379049	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 2, corresponding to MCC=0.133630620956212
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=2) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3252472
ROC AUC 		0.6


TOTAL:

 FN =  8  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  7  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  12  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  33  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.19 	 0.41 	 0.67 	 0.47 	 0.73		 0.33		0.60

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1329139

When k=1, the MCC value is -0.1329139	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.08878188

When k=2, the MCC value is -0.08878188	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1677349

When k=3, the MCC value is -0.1677349	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1259882

When k=4, the MCC value is -0.1259882	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1597883

When k=5, the MCC value is 0.1597883	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2099803

When k=6, the MCC value is 0.2099803	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.02424643

When k=7, the MCC value is 0.02424643	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=8, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.06579517

When k=9, the MCC value is -0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=10, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=11, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1973855

When k=12, the MCC value is 0.1973855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=13, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=14, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=16, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.209980262782904
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3029161
ROC AUC 		0.4625


TOTAL:

 FN =  17  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  9  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.09 	 0.19 	 0.57 	 0.15 	 0.78		 0.30		0.46

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.01169211

When k=1, the MCC value is -0.01169211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.06877015

When k=2, the MCC value is 0.06877015	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09325048

When k=3, the MCC value is 0.09325048	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.058554

When k=4, the MCC value is 0.058554	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.0133215

When k=5, the MCC value is 0.0133215	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03640337

When k=6, the MCC value is 0.03640337	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1140834

When k=7, the MCC value is 0.1140834	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1657484

When k=8, the MCC value is 0.1657484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1663044

When k=9, the MCC value is 0.1663044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.05634362

When k=10, the MCC value is 0.05634362	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1100297

When k=11, the MCC value is -0.1100297	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.03138824

When k=12, the MCC value is 0.03138824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1690309

When k=13, the MCC value is 0.1690309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.0451754

When k=14, the MCC value is 0.0451754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.0451754

When k=15, the MCC value is 0.0451754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1807016

When k=16, the MCC value is 0.1807016	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.116335

When k=17, the MCC value is 0.116335	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 16, corresponding to MCC=0.18070158058105
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=16) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2208214
ROC AUC 		0.4891304


TOTAL:

 FN =  14  /  14 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  14 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  46 	 (truth == 0) & (prediction >= threshold)
 TN =  45  /  46 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.07 	 0.00 	 0.75 	 0.00 	 0.98		 0.22		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1694927

When k=1, the MCC value is -0.1694927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2313178

When k=2, the MCC value is -0.2313178	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=3, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.03047898

When k=4, the MCC value is -0.03047898	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.0446072

When k=5, the MCC value is -0.0446072	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1921866

When k=6, the MCC value is -0.1921866	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2409054

When k=7, the MCC value is -0.2409054	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.171981

When k=8, the MCC value is -0.171981	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1294522

When k=9, the MCC value is -0.1294522	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1067387

When k=10, the MCC value is -0.1067387	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=11, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.03698634

When k=12, the MCC value is -0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.08270396

When k=13, the MCC value is -0.08270396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1132939

When k=14, the MCC value is -0.1132939	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.02901447

When k=15, the MCC value is -0.02901447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.05697035

When k=16, the MCC value is -0.05697035	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=17, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=18, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=19, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=20, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=21, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.1285052

When k=22, the MCC value is 0.1285052	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=23, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.001920235

When k=24, the MCC value is 0.001920235	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=25, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=26, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=27, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=28, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=29, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=30, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=31, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=32, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=33, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=34, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=35, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=36, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=37, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=38, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=39, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=40, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 23, corresponding to MCC=0.207054065022816
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=23) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2779169
ROC AUC 		0.5085227


TOTAL:

 FN =  15  /  16 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  16 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  44 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  44 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.03 	 0.11 	 0.72 	 0.06 	 0.95		 0.28		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1921856

When k=1, the MCC value is -0.1921856	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.07435478

When k=2, the MCC value is -0.07435478	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.06988566

When k=3, the MCC value is 0.06988566	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1572427

When k=4, the MCC value is 0.1572427	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=5, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.01354585

When k=6, the MCC value is 0.01354585	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.06988566

When k=7, the MCC value is 0.06988566	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.01354585

When k=8, the MCC value is 0.01354585	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.01467892

When k=9, the MCC value is -0.01467892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1578303

When k=10, the MCC value is -0.1578303	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=11, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1406422

When k=12, the MCC value is -0.1406422	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.03160698

When k=13, the MCC value is 0.03160698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=14, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1578303

When k=15, the MCC value is -0.1578303	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=16, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.185027

When k=17, the MCC value is -0.185027	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=18, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1961161

When k=19, the MCC value is -0.1961161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=20, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=21, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1683451

When k=22, the MCC value is -0.1683451	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=23, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=26, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=27, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=28, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=29, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=30, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=31, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=32, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=33, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=34, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=35, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.157242725508288
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2428393
ROC AUC 		0.4888889


TOTAL:

 FN =  11  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  13  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.02 	 0.25 	 0.60 	 0.27 	 0.71		 0.24		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.04847862

When k=1, the MCC value is -0.04847862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.2165064

When k=2, the MCC value is 0.2165064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0

When k=3, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0

When k=4, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1144259

When k=5, the MCC value is -0.1144259	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1522862

When k=6, the MCC value is -0.1522862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.09901475

When k=7, the MCC value is -0.09901475	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1144259

When k=8, the MCC value is -0.1144259	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1144259

When k=9, the MCC value is -0.1144259	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=10, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=11, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=12, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=13, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=14, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=15, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=16, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=17, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=18, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=19, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=20, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=21, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=22, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=25, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=26, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=31, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 2, corresponding to MCC=0.21650635094611
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=2) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2373
ROC AUC 		0.4777778


TOTAL:

 FN =  10  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  17  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  28  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.04 	 0.27 	 0.55 	 0.33 	 0.62		 0.24		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2323492

When k=1, the MCC value is -0.2323492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.02068572

When k=2, the MCC value is 0.02068572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.01505107

When k=3, the MCC value is 0.01505107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1448

When k=4, the MCC value is -0.1448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.07165744

When k=5, the MCC value is -0.07165744	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=6, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1373494

When k=7, the MCC value is -0.1373494	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=8, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=9, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=10, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.04918613

When k=11, the MCC value is 0.04918613	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=12, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=13, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=14, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=15, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=16, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=17, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=18, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=19, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=20, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=21, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=22, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=23, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=24, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=25, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=26, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=27, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=28, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=29, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=30, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=31, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=32, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=33, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=34, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=35, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=36, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=37, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=38, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.1819369

When k=39, the MCC value is -0.1819369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=40, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=41, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=42, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = -0.1561738

When k=44, the MCC value is -0.1561738	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 27, corresponding to MCC=0.0731854853583809
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=27) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2739468
ROC AUC 		0.4761905


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  40  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.12 	 0.00 	 0.67 	 0.00 	 0.95		 0.27		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.02533473

When k=1, the MCC value is -0.02533473	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.02860648

When k=2, the MCC value is -0.02860648	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=3, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1767767

When k=4, the MCC value is -0.1767767	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1835558

When k=5, the MCC value is 0.1835558	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2362278

When k=6, the MCC value is 0.2362278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=7, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=8, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.06933752

When k=9, the MCC value is -0.06933752	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=10, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=12, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=13, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=15, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=16, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.04724556

When k=17, the MCC value is -0.04724556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=18, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=19, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=20, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=21, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=22, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=23, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=24, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=25, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.236227795630767
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2763719
ROC AUC 		0.4531451


TOTAL:

 FN =  18  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  35  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.14 	 0.08 	 0.60 	 0.05 	 0.85		 0.28		0.45

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1949117

When k=1, the MCC value is -0.1949117	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2221501

When k=2, the MCC value is -0.2221501	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.03419128

When k=3, the MCC value is -0.03419128	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.03688556

When k=4, the MCC value is 0.03688556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1383328

When k=5, the MCC value is -0.1383328	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.175662

When k=6, the MCC value is -0.175662	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2257009

When k=7, the MCC value is -0.2257009	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.2018398

When k=8, the MCC value is -0.2018398	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.05634362

When k=9, the MCC value is -0.05634362	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.03138824

When k=10, the MCC value is 0.03138824	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1100297

When k=12, the MCC value is -0.1100297	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1569412

When k=13, the MCC value is -0.1569412	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1540416

When k=14, the MCC value is 0.1540416	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 14, corresponding to MCC=0.154041596847482
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=14) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2833333
ROC AUC 		0.5


TOTAL:

 FN =  17  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  43  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.72 	 0.00 	 1.00		 0.28		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.293151

When k=1, the MCC value is 0.293151	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.25

When k=2, the MCC value is 0.25	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08164966

When k=3, the MCC value is 0.08164966	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.08164966

When k=4, the MCC value is -0.08164966	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.05721296

When k=5, the MCC value is 0.05721296	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.02786391

When k=6, the MCC value is 0.02786391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.05572782

When k=7, the MCC value is -0.05572782	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1522862

When k=8, the MCC value is -0.1522862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.02860648

When k=9, the MCC value is -0.02860648	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.03045725

When k=10, the MCC value is 0.03045725	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.03466876

When k=12, the MCC value is 0.03466876	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=14, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=15, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.293150984988964
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3421299
ROC AUC 		0.5125


TOTAL:

 FN =  12  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  8  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  15  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  25  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.02 	 0.37 	 0.55 	 0.40 	 0.62		 0.34		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1

When k=1, the MCC value is 0.1	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.07216878

When k=2, the MCC value is -0.07216878	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08164966

When k=3, the MCC value is 0.08164966	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.05721296

When k=4, the MCC value is 0.05721296	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.06324555

When k=5, the MCC value is 0.06324555	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0

When k=6, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0

When k=7, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0

When k=8, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0

When k=9, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1468446

When k=10, the MCC value is -0.1468446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.07342231

When k=12, the MCC value is 0.07342231	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=13, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=15, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=16, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 13, corresponding to MCC=0.184114923579665
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=13) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3980971
ROC AUC 		0.5082256


TOTAL:

 FN =  22  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  36  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.04 	 0.08 	 0.62 	 0.04 	 0.97		 0.40		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02615329

When k=1, the MCC value is 0.02615329	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.2132007

When k=2, the MCC value is 0.2132007	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.121829

When k=3, the MCC value is 0.121829	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0

When k=4, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0

When k=5, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.06933752

When k=6, the MCC value is -0.06933752	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.03671115

When k=7, the MCC value is -0.03671115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1178511

When k=8, the MCC value is -0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=9, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.2626129

When k=11, the MCC value is 0.2626129	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=12, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=13, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=14, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=16, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=18, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 11, corresponding to MCC=0.262612865719445
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=11) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3582442
ROC AUC 		0.5282413


TOTAL:

 FN =  17  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.11 	 0.17 	 0.68 	 0.11 	 0.95		 0.36		0.53

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2481646

When k=1, the MCC value is -0.2481646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.09466074

When k=2, the MCC value is -0.09466074	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.12105

When k=3, the MCC value is -0.12105	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.06436268

When k=4, the MCC value is -0.06436268	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=5, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.02305715

When k=6, the MCC value is -0.02305715	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=7, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.06105044

When k=8, the MCC value is -0.06105044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05137926

When k=9, the MCC value is 0.05137926	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=10, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=11, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=12, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 10, corresponding to MCC=0.171101750244777
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=10) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.347005
ROC AUC 		0.4868421


TOTAL:

 FN =  22  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.10 	 0.00 	 0.62 	 0.00 	 0.97		 0.35		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02175341

When k=1, the MCC value is 0.02175341	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.0718714

When k=2, the MCC value is -0.0718714	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.01090295

When k=3, the MCC value is -0.01090295	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.148314

When k=4, the MCC value is -0.148314	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.08640333

When k=5, the MCC value is 0.08640333	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.03993615

When k=6, the MCC value is 0.03993615	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.0922286

When k=7, the MCC value is 0.0922286	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.09495946

When k=8, the MCC value is -0.09495946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=9, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=10, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.2033553

When k=11, the MCC value is -0.2033553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.06470396

When k=12, the MCC value is -0.06470396	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1745592

When k=13, the MCC value is -0.1745592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.01586902

When k=14, the MCC value is -0.01586902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=15, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.1711018

When k=16, the MCC value is 0.1711018	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 15, corresponding to MCC=0.171101750244777
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=15) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3
ROC AUC 		0.5


TOTAL:

 FN =  18  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  42  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.70 	 0.00 	 1.00		 0.30		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2205709

When k=1, the MCC value is -0.2205709	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1990611

When k=2, the MCC value is -0.1990611	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.2110986

When k=3, the MCC value is -0.2110986	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.06205716

When k=4, the MCC value is -0.06205716	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1013389

When k=5, the MCC value is -0.1013389	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1013389

When k=6, the MCC value is -0.1013389	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.02533473

When k=7, the MCC value is -0.02533473	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.02068572

When k=8, the MCC value is 0.02068572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1329139

When k=9, the MCC value is -0.1329139	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.01602309

When k=10, the MCC value is -0.01602309	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=11, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=12, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=13, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=14, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=15, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1616116

When k=16, the MCC value is -0.1616116	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1074862

When k=17, the MCC value is -0.1074862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=18, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.03830251

When k=19, the MCC value is -0.03830251	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=20, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=21, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.01194291

When k=22, the MCC value is 0.01194291	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=23, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.01505107

When k=24, the MCC value is 0.01505107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.01505107

When k=25, the MCC value is 0.01505107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.01505107

When k=26, the MCC value is 0.01505107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.07165744

When k=27, the MCC value is -0.07165744	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.01505107

When k=28, the MCC value is 0.01505107	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.2269152

When k=29, the MCC value is -0.2269152	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=30, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 8, corresponding to MCC=0.020685720094603
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=8) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3443321
ROC AUC 		0.4760766


TOTAL:

 FN =  19  /  22 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  22 	 (truth == 1) & (prediction >= threshold)

 FP =  7  /  38 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  38 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.06 	 0.19 	 0.57 	 0.14 	 0.82		 0.34		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1480391

When k=1, the MCC value is -0.1480391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1674429

When k=2, the MCC value is -0.1674429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1459918

When k=3, the MCC value is -0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.03077287

When k=4, the MCC value is -0.03077287	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.02272727

When k=5, the MCC value is -0.02272727	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.02272727

When k=6, the MCC value is -0.02272727	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.04269245

When k=7, the MCC value is -0.04269245	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.006493506

When k=8, the MCC value is 0.006493506	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.01884446

When k=9, the MCC value is -0.01884446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.06741999

When k=10, the MCC value is -0.06741999	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.01565369

When k=11, the MCC value is 0.01565369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1256539

When k=12, the MCC value is -0.1256539	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.07537784

When k=13, the MCC value is -0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=14, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1256539

When k=15, the MCC value is -0.1256539	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.01565369

When k=16, the MCC value is 0.01565369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.01565369

When k=17, the MCC value is 0.01565369	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.09090909

When k=18, the MCC value is 0.09090909	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.141019

When k=19, the MCC value is 0.141019	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.05025189

When k=20, the MCC value is 0.05025189	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=21, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1818182

When k=22, the MCC value is -0.1818182	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1611646

When k=23, the MCC value is -0.1611646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.04545455

When k=24, the MCC value is -0.04545455	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=25, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.05025189

When k=26, the MCC value is 0.05025189	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=27, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=28, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=29, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0.03458572

When k=30, the MCC value is 0.03458572	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=31, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=32, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=33, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=34, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=35, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.07537784

When k=36, the MCC value is -0.07537784	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=37, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = -0.01007279

When k=38, the MCC value is -0.01007279	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0.09798119

When k=39, the MCC value is 0.09798119	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=40, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=42, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 19, corresponding to MCC=0.141019018704442
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=19) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.211118
ROC AUC 		0.4444444


TOTAL:

 FN =  15  /  15 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  15 	 (truth == 1) & (prediction >= threshold)

 FP =  5  /  45 	 (truth == 0) & (prediction >= threshold)
 TN =  40  /  45 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.17 	 0.00 	 0.67 	 0.00 	 0.89		 0.21		0.44

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1677349

When k=1, the MCC value is -0.1677349	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.08182135

When k=2, the MCC value is -0.08182135	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1840833

When k=3, the MCC value is -0.1840833	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.2710518

When k=4, the MCC value is -0.2710518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1167855

When k=5, the MCC value is -0.1167855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1162029

When k=6, the MCC value is 0.1162029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.08727411

When k=7, the MCC value is -0.08727411	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.04045567

When k=8, the MCC value is -0.04045567	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.02162447

When k=9, the MCC value is 0.02162447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.09766158

When k=10, the MCC value is -0.09766158	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.09766158

When k=11, the MCC value is -0.09766158	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1206552

When k=12, the MCC value is -0.1206552	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=13, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1206552

When k=14, the MCC value is -0.1206552	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.09766158

When k=15, the MCC value is -0.09766158	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09766158

When k=16, the MCC value is -0.09766158	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=17, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=18, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=19, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=20, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=21, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=22, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.06846943

When k=26, the MCC value is -0.06846943	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 6, corresponding to MCC=0.11620294599018
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=6) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4686305
ROC AUC 		0.516835


TOTAL:

 FN =  22  /  27 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  27 	 (truth == 1) & (prediction >= threshold)

 FP =  5  /  33 	 (truth == 0) & (prediction >= threshold)
 TN =  28  /  33 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.04 	 0.27 	 0.55 	 0.19 	 0.85		 0.47		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02423931

When k=1, the MCC value is 0.02423931	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1332504

When k=2, the MCC value is 0.1332504	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.05721296

When k=3, the MCC value is 0.05721296	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1950474

When k=4, the MCC value is 0.1950474	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2426813

When k=5, the MCC value is 0.2426813	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.2288518

When k=6, the MCC value is 0.2288518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.2357023

When k=7, the MCC value is 0.2357023	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.121829

When k=8, the MCC value is 0.121829	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=9, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.07342231

When k=10, the MCC value is 0.07342231	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1178511

When k=11, the MCC value is 0.1178511	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=12, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.04264014

When k=13, the MCC value is 0.04264014	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=15, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=16, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.09449112

When k=17, the MCC value is 0.09449112	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=20, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.242681335848538
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4161175
ROC AUC 		0.5246769


TOTAL:

 FN =  20  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.08 	 0.21 	 0.62 	 0.13 	 0.92		 0.42		0.52

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.004784689

When k=1, the MCC value is -0.004784689	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.03993615

When k=2, the MCC value is 0.03993615	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1744472

When k=3, the MCC value is -0.1744472	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.09236218

When k=4, the MCC value is -0.09236218	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.12105

When k=5, the MCC value is -0.12105	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.09495946

When k=6, the MCC value is -0.09495946	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.006782818

When k=7, the MCC value is 0.006782818	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.02085598

When k=8, the MCC value is 0.02085598	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1459918

When k=9, the MCC value is 0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1459918

When k=10, the MCC value is 0.1459918	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1042799

When k=11, the MCC value is -0.1042799	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1745592

When k=12, the MCC value is -0.1745592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.2033553

When k=13, the MCC value is -0.2033553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1745592

When k=14, the MCC value is -0.1745592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.2033553

When k=15, the MCC value is -0.2033553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.141293

When k=16, the MCC value is -0.141293	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=18, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=19, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.09905891

When k=20, the MCC value is -0.09905891	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 9, corresponding to MCC=0.145991830644903
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=9) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3521612
ROC AUC 		0.5301669


TOTAL:

 FN =  16  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  4  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.09 	 0.23 	 0.67 	 0.16 	 0.90		 0.35		0.53

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1566401

When k=1, the MCC value is 0.1566401	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.0234554

When k=2, the MCC value is 0.0234554	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=3, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.2507591

When k=4, the MCC value is 0.2507591	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=5, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1990344

When k=6, the MCC value is 0.1990344	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.183647

When k=7, the MCC value is 0.183647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.183647

When k=8, the MCC value is 0.183647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.183647

When k=9, the MCC value is 0.183647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.2727823

When k=10, the MCC value is 0.2727823	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=11, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.1726131

When k=12, the MCC value is 0.1726131	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1912446

When k=13, the MCC value is 0.1912446	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.2727823

When k=14, the MCC value is 0.2727823	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=16, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 10, corresponding to MCC=0.272782263608511
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=10) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4190417
ROC AUC 		0.5457875


TOTAL:

 FN =  18  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  3  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.16 	 0.23 	 0.67 	 0.14 	 0.95		 0.42		0.55

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.03174603

When k=1, the MCC value is -0.03174603	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.03018889

When k=2, the MCC value is 0.03018889	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.03636965

When k=3, the MCC value is 0.03636965	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=4, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2342674

When k=5, the MCC value is 0.2342674	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.19518

When k=6, the MCC value is 0.19518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.2781743

When k=7, the MCC value is 0.2781743	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.2152569

When k=8, the MCC value is 0.2152569	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.06579517

When k=9, the MCC value is 0.06579517	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=10, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=11, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=12, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=13, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1215661

When k=14, the MCC value is -0.1215661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.08522865

When k=15, the MCC value is -0.08522865	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=20, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.1835629

When k=21, the MCC value is 0.1835629	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.08104409

When k=22, the MCC value is 0.08104409	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=23, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1166424

When k=24, the MCC value is 0.1166424	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.2836543

When k=25, the MCC value is 0.2836543	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.01668754

When k=26, the MCC value is 0.01668754	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 25, corresponding to MCC=0.283654314465588
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=25) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3154591
ROC AUC 		0.4875


TOTAL:

 FN =  20  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.09 	 0.00 	 0.65 	 0.00 	 0.98		 0.32		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1477701

When k=1, the MCC value is -0.1477701	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.16855

When k=2, the MCC value is -0.16855	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1818182

When k=3, the MCC value is -0.1818182	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=4, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.2921108

When k=5, the MCC value is 0.2921108	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.141019

When k=6, the MCC value is 0.141019	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=7, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1383429

When k=8, the MCC value is -0.1383429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=9, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1119785

When k=10, the MCC value is -0.1119785	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.07850687

When k=11, the MCC value is -0.07850687	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0

When k=12, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 5, corresponding to MCC=0.2921108244592
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=5) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.5951157
ROC AUC 		0.5740741


TOTAL:

 FN =  23  /  27 	 (truth == 1) & (prediction < threshold)
 TP =  4  /  27 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  33 	 (truth == 0) & (prediction >= threshold)
 TN =  33  /  33 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.30 	 0.26 	 0.62 	 0.15 	 1.00		 0.60		0.57

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2657887

When k=1, the MCC value is -0.2657887	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1957807

When k=2, the MCC value is -0.1957807	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.02055856

When k=3, the MCC value is 0.02055856	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.185027

When k=4, the MCC value is -0.185027	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=5, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1048285

When k=6, the MCC value is 0.1048285	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.2241327

When k=7, the MCC value is 0.2241327	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=8, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=9, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=10, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=11, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=12, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=14, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.05603318

When k=16, the MCC value is -0.05603318	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=17, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.008016435

When k=18, the MCC value is -0.008016435	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.1362631

When k=26, the MCC value is -0.1362631	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 7, corresponding to MCC=0.22413272587221
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=7) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3776802
ROC AUC 		0.5436508


TOTAL:

 FN =  16  /  18 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  18 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  42 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  42 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.18 	 0.19 	 0.72 	 0.11 	 0.98		 0.38		0.54

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.02564103

When k=1, the MCC value is -0.02564103	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0

When k=2, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.008261642

When k=3, the MCC value is 0.008261642	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.1406422

When k=4, the MCC value is 0.1406422	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1229863

When k=5, the MCC value is 0.1229863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=6, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=7, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1048285

When k=8, the MCC value is 0.1048285	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.09482093

When k=9, the MCC value is -0.09482093	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.03160698

When k=10, the MCC value is 0.03160698	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=11, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.04898181

When k=12, the MCC value is -0.04898181	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=13, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.08223423

When k=14, the MCC value is -0.08223423	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=15, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=16, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=17, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=18, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=19, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.185027

When k=20, the MCC value is -0.185027	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.1125384

When k=21, the MCC value is -0.1125384	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.01164761

When k=22, the MCC value is -0.01164761	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1961161

When k=23, the MCC value is -0.1961161	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=24, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.1281237

When k=25, the MCC value is -0.1281237	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.1683451

When k=26, the MCC value is -0.1683451	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 4, corresponding to MCC=0.140642169281549
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=4) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.1953306
ROC AUC 		0.4378882


TOTAL:

 FN =  13  /  14 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  14 	 (truth == 1) & (prediction >= threshold)

 FP =  9  /  46 	 (truth == 0) & (prediction >= threshold)
 TN =  37  /  46 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.14 	 0.08 	 0.63 	 0.07 	 0.80		 0.20		0.44

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1755242

When k=1, the MCC value is 0.1755242	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1901512

When k=2, the MCC value is -0.1901512	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.1674429

When k=3, the MCC value is -0.1674429	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.05472927

When k=4, the MCC value is -0.05472927	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.04784082

When k=5, the MCC value is 0.04784082	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.121419

When k=6, the MCC value is -0.121419	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.04918613

When k=7, the MCC value is 0.04918613	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=8, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05401382

When k=9, the MCC value is 0.05401382	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=10, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=11, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=12, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.07561935

When k=13, the MCC value is -0.07561935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=14, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1053319

When k=15, the MCC value is 0.1053319	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=16, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=17, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=18, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=19, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=20, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=21, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.175524155431448
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3867444
ROC AUC 		0.547619


TOTAL:

 FN =  12  /  21 	 (truth == 1) & (prediction < threshold)
 TP =  9  /  21 	 (truth == 1) & (prediction >= threshold)

 FP =  13  /  39 	 (truth == 0) & (prediction >= threshold)
 TN =  26  /  39 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.09 	 0.42 	 0.58 	 0.43 	 0.67		 0.39		0.55

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.253734

When k=1, the MCC value is -0.253734	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.2901294

When k=2, the MCC value is -0.2901294	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.2177044

When k=3, the MCC value is -0.2177044	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.07856742

When k=4, the MCC value is -0.07856742	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.06205716

When k=5, the MCC value is -0.06205716	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1448

When k=6, the MCC value is -0.1448	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.04199605

When k=7, the MCC value is -0.04199605	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1111111

When k=8, the MCC value is 0.1111111	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.05163978

When k=9, the MCC value is 0.05163978	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.0269484

When k=11, the MCC value is -0.0269484	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.0899236

When k=12, the MCC value is -0.0899236	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1924501

When k=13, the MCC value is -0.1924501	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.03481553

When k=15, the MCC value is -0.03481553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1543033

When k=16, the MCC value is -0.1543033	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1543033

When k=17, the MCC value is -0.1543033	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.1924501

When k=18, the MCC value is -0.1924501	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=19, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.06415003

When k=20, the MCC value is -0.06415003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=21, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1324532

When k=22, the MCC value is -0.1324532	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.1072113

When k=23, the MCC value is -0.1072113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.1324532

When k=24, the MCC value is -0.1324532	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = -0.1543033

When k=25, the MCC value is -0.1543033	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=26, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = -0.1072113

When k=27, the MCC value is -0.1072113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.1740777

When k=28, the MCC value is -0.1740777	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.1543033

When k=29, the MCC value is -0.1543033	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.1324532

When k=30, the MCC value is -0.1324532	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = -0.0751646

When k=31, the MCC value is -0.0751646	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0.2254938

When k=44, the MCC value is 0.2254938	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 44, corresponding to MCC=0.225493808400849
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=44) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3333333
ROC AUC 		0.5


TOTAL:

 FN =  20  /  20 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  20 	 (truth == 1) & (prediction >= threshold)

 FP =  0  /  40 	 (truth == 0) & (prediction >= threshold)
 TN =  40  /  40 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      0.00 	 0.00 	 0.67 	 0.00 	 1.00		 0.33		0.50

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.02615329

When k=1, the MCC value is 0.02615329	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.09466074

When k=2, the MCC value is -0.09466074	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.171981

When k=3, the MCC value is -0.171981	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=4, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.151127

When k=5, the MCC value is -0.151127	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.2095892

When k=6, the MCC value is -0.2095892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.1378187

When k=7, the MCC value is -0.1378187	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=8, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1895806

When k=9, the MCC value is -0.1895806	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.2095892

When k=10, the MCC value is -0.2095892	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1895806

When k=11, the MCC value is -0.1895806	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.02901447

When k=12, the MCC value is -0.02901447	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=13, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=17, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=18, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 1, corresponding to MCC=0.0261532890482971
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=1) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3589633
ROC AUC 		0.4444444


TOTAL:

 FN =  18  /  24 	 (truth == 1) & (prediction < threshold)
 TP =  6  /  24 	 (truth == 1) & (prediction >= threshold)

 FP =  13  /  36 	 (truth == 0) & (prediction >= threshold)
 TN =  23  /  36 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.12 	 0.28 	 0.48 	 0.25 	 0.64		 0.36		0.44

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1114556

When k=1, the MCC value is 0.1114556	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.09901475

When k=2, the MCC value is 0.09901475	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0

When k=3, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.02786391

When k=4, the MCC value is 0.02786391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0

When k=5, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0

When k=6, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1705606

When k=7, the MCC value is 0.1705606	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1705606

When k=8, the MCC value is 0.1705606	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.1622214

When k=9, the MCC value is 0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.2362278

When k=11, the MCC value is 0.2362278	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=12, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=13, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.1622214

When k=14, the MCC value is 0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.1841149

When k=15, the MCC value is 0.1841149	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=16, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=17, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0.06565322

When k=18, the MCC value is 0.06565322	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 11, corresponding to MCC=0.236227795630767
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=11) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3602142
ROC AUC 		0.4811986


TOTAL:

 FN =  22  /  23 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  23 	 (truth == 1) & (prediction >= threshold)

 FP =  3  /  37 	 (truth == 0) & (prediction >= threshold)
 TN =  34  /  37 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.07 	 0.07 	 0.58 	 0.04 	 0.92		 0.36		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.1003662

When k=1, the MCC value is 0.1003662	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.2120067

When k=2, the MCC value is 0.2120067	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.05802589

When k=3, the MCC value is -0.05802589	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1504401

When k=4, the MCC value is -0.1504401	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.04494666

When k=5, the MCC value is -0.04494666	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.0935168

When k=6, the MCC value is 0.0935168	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.004691115

When k=7, the MCC value is -0.004691115	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.07816961

When k=8, the MCC value is -0.07816961	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1074431

When k=9, the MCC value is -0.1074431	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=10, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.05380001

When k=11, the MCC value is -0.05380001	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1074431

When k=12, the MCC value is -0.1074431	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1177603

When k=13, the MCC value is -0.1177603	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0

When k=14, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1177603

When k=16, the MCC value is -0.1177603	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 2, corresponding to MCC=0.212006657264814
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=2) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2887916
ROC AUC 		0.5075239


TOTAL:

 FN =  12  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  5  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  12  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  31  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.02 	 0.29 	 0.60 	 0.29 	 0.72		 0.29		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.2955227

When k=1, the MCC value is -0.2955227	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.003877222

When k=2, the MCC value is 0.003877222	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.0111518

When k=3, the MCC value is -0.0111518	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=4, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.188594

When k=5, the MCC value is 0.188594	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.02135407

When k=6, the MCC value is -0.02135407	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.07978979

When k=7, the MCC value is 0.07978979	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.04661211

When k=8, the MCC value is 0.04661211	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=9, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.07978979

When k=10, the MCC value is 0.07978979	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=11, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.08630145

When k=12, the MCC value is -0.08630145	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=13, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=14, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=15, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=16, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0.08928647

When k=17, the MCC value is 0.08928647	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.01977003

When k=18, the MCC value is -0.01977003	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=19, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=20, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=21, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=22, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=23, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0.1951607

When k=24, the MCC value is 0.1951607	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=25, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.0780626

When k=26, the MCC value is 0.0780626	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=27, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=28, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=29, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=30, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=33, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=34, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=35, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=36, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=37, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0.02545574

When k=38, the MCC value is 0.02545574	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=39, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=40, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=42, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=44, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0.2070541

When k=45, the MCC value is 0.2070541	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 27, corresponding to MCC=0.207054065022816
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=27) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.291608
ROC AUC 		0.506156


TOTAL:

 FN =  16  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  1  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.03 	 0.10 	 0.70 	 0.06 	 0.95		 0.29		0.51

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.08642212

When k=1, the MCC value is -0.08642212	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.121419

When k=2, the MCC value is -0.121419	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.08011545

When k=3, the MCC value is 0.08011545	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.03670808

When k=4, the MCC value is -0.03670808	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=5, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.08528941

When k=6, the MCC value is -0.08528941	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.05621272

When k=7, the MCC value is -0.05621272	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.02418175

When k=8, the MCC value is -0.02418175	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.008219672

When k=9, the MCC value is 0.008219672	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0

When k=10, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0

When k=11, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=12, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=14, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0.07318549

When k=15, the MCC value is 0.07318549	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1264113

When k=19, the MCC value is -0.1264113	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.08862553

When k=20, the MCC value is -0.08862553	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.0801154494307056
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.4738705
ROC AUC 		0.5542857


TOTAL:

 FN =  18  /  25 	 (truth == 1) & (prediction < threshold)
 TP =  7  /  25 	 (truth == 1) & (prediction >= threshold)

 FP =  6  /  35 	 (truth == 0) & (prediction >= threshold)
 TN =  29  /  35 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.13 	 0.37 	 0.60 	 0.28 	 0.83		 0.47		0.55

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.1077051

When k=1, the MCC value is -0.1077051	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.07856742

When k=2, the MCC value is -0.07856742	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.09128709

When k=3, the MCC value is 0.09128709	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.035169

When k=4, the MCC value is -0.035169	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.08006408

When k=5, the MCC value is 0.08006408	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.1230915

When k=6, the MCC value is -0.1230915	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.03121953

When k=7, the MCC value is -0.03121953	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.1230915

When k=8, the MCC value is -0.1230915	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=9, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1873172

When k=10, the MCC value is -0.1873172	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=11, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=12, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.1873172

When k=13, the MCC value is -0.1873172	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=14, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=15, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=16, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.03121953

When k=18, the MCC value is -0.03121953	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=19, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1516196

When k=20, the MCC value is -0.1516196	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.03121953

When k=21, the MCC value is -0.03121953	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.1062988

When k=22, the MCC value is -0.1062988	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = -0.03121953

When k=24, the MCC value is -0.03121953	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0.1594482

When k=25, the MCC value is 0.1594482	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0.0379049

When k=26, the MCC value is 0.0379049	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 25, corresponding to MCC=0.15944820103582
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=25) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2996861
ROC AUC 		0.4878049


TOTAL:

 FN =  19  /  19 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  19 	 (truth == 1) & (prediction >= threshold)

 FP =  1  /  41 	 (truth == 0) & (prediction >= threshold)
 TN =  40  /  41 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.09 	 0.00 	 0.67 	 0.00 	 0.98		 0.30		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.09466074

When k=1, the MCC value is -0.09466074	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = -0.1433327

When k=2, the MCC value is -0.1433327	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = -0.2311902

When k=3, the MCC value is -0.2311902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.3485205

When k=4, the MCC value is -0.3485205	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = -0.2311902

When k=5, the MCC value is -0.2311902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.2311902

When k=6, the MCC value is -0.2311902	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2409054

When k=7, the MCC value is -0.2409054	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = -0.2811935

When k=8, the MCC value is -0.2811935	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=9, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1605528

When k=10, the MCC value is -0.1605528	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1819487

When k=11, the MCC value is -0.1819487	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1378187

When k=12, the MCC value is -0.1378187	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.246623

When k=13, the MCC value is -0.246623	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = 0.03698634

When k=14, the MCC value is 0.03698634	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=15, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=16, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=17, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=18, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=19, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = -0.1167592

When k=20, the MCC value is -0.1167592	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = -0.228508

When k=21, the MCC value is -0.228508	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = -0.055759

When k=22, the MCC value is -0.055759	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=23, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = -0.08185858

When k=26, the MCC value is -0.08185858	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = -0.1442492

When k=28, the MCC value is -0.1442492	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 14, corresponding to MCC=0.0369863360727655
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=14) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2108587
ROC AUC 		0.4918167


TOTAL:

 FN =  11  /  13 	 (truth == 1) & (prediction < threshold)
 TP =  2  /  13 	 (truth == 1) & (prediction >= threshold)

 FP =  8  /  47 	 (truth == 0) & (prediction >= threshold)
 TN =  39  /  47 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.02 	 0.17 	 0.68 	 0.15 	 0.83		 0.21		0.49

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = 0.05337605

When k=1, the MCC value is 0.05337605	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0.1589661

When k=2, the MCC value is 0.1589661	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.1038515

When k=3, the MCC value is 0.1038515	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.1314681

When k=4, the MCC value is -0.1314681	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0.1229863

When k=5, the MCC value is 0.1229863	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = 0.1687151

When k=6, the MCC value is 0.1687151	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = 0.1233513

When k=7, the MCC value is 0.1233513	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0.1687151

When k=8, the MCC value is 0.1687151	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = 0.2241327

When k=9, the MCC value is 0.2241327	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = 0.1523123

When k=10, the MCC value is 0.1523123	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = 0.1523123

When k=11, the MCC value is 0.1523123	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = 0.05839848

When k=12, the MCC value is 0.05839848	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=13, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09553254

When k=14, the MCC value is -0.09553254	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 9, corresponding to MCC=0.22413272587221
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=9) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.2587275
ROC AUC 		0.4767442


TOTAL:

 FN =  17  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  0  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  2  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  41  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      -0.12 	 0.00 	 0.68 	 0.00 	 0.95		 0.26		0.48

[Dataset size]
number of data instances (rows) = 299 
number of features (columns) = 12 
[1] "This vector is not binary. The imbalance_retriever() function will stop here"

[Imbalance of this dataset]
[class:   #elements = NA]
NA%
[class:   #elements = NA]
NA%

training_set_perce = 60% 
validation_set_perce = 20% 
test_set_perce = 20% 
[Creating the subsets for the values]
[Creating the subsets for the labels "1"-"0"]

[Optimization of the hyper-parameter k start]

[Training the kNN model (with k=1) on training set & applying the kNN model to validation set]

MCC = -0.04847862

When k=1, the MCC value is -0.04847862	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=2) on training set & applying the kNN model to validation set]

MCC = 0

When k=2, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=3) on training set & applying the kNN model to validation set]

MCC = 0.02786391

When k=3, the MCC value is 0.02786391	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=4) on training set & applying the kNN model to validation set]

MCC = -0.08838835

When k=4, the MCC value is -0.08838835	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=5) on training set & applying the kNN model to validation set]

MCC = 0

When k=5, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=6) on training set & applying the kNN model to validation set]

MCC = -0.08528029

When k=6, the MCC value is -0.08528029	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=7) on training set & applying the kNN model to validation set]

MCC = -0.2132007

When k=7, the MCC value is -0.2132007	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=8) on training set & applying the kNN model to validation set]

MCC = 0

When k=8, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=9) on training set & applying the kNN model to validation set]

MCC = -0.1889822

When k=9, the MCC value is -0.1889822	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=10) on training set & applying the kNN model to validation set]

MCC = -0.1622214

When k=10, the MCC value is -0.1622214	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=11) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=11, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=12) on training set & applying the kNN model to validation set]

MCC = -0.1313064

When k=12, the MCC value is -0.1313064	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=13) on training set & applying the kNN model to validation set]

MCC = 0

When k=13, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=14) on training set & applying the kNN model to validation set]

MCC = -0.09205746

When k=14, the MCC value is -0.09205746	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=15) on training set & applying the kNN model to validation set]

MCC = 0

When k=15, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=16) on training set & applying the kNN model to validation set]

MCC = 0

When k=16, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=17) on training set & applying the kNN model to validation set]

MCC = 0

When k=17, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=18) on training set & applying the kNN model to validation set]

MCC = 0

When k=18, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=19) on training set & applying the kNN model to validation set]

MCC = 0

When k=19, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=20) on training set & applying the kNN model to validation set]

MCC = 0

When k=20, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=21) on training set & applying the kNN model to validation set]

MCC = 0

When k=21, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=22) on training set & applying the kNN model to validation set]

MCC = 0

When k=22, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=23) on training set & applying the kNN model to validation set]

MCC = 0

When k=23, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=24) on training set & applying the kNN model to validation set]

MCC = 0

When k=24, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=25) on training set & applying the kNN model to validation set]

MCC = 0

When k=25, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=26) on training set & applying the kNN model to validation set]

MCC = 0

When k=26, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=27) on training set & applying the kNN model to validation set]

MCC = 0

When k=27, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=28) on training set & applying the kNN model to validation set]

MCC = 0

When k=28, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=29) on training set & applying the kNN model to validation set]

MCC = 0

When k=29, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=30) on training set & applying the kNN model to validation set]

MCC = 0

When k=30, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=31) on training set & applying the kNN model to validation set]

MCC = 0

When k=31, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=32) on training set & applying the kNN model to validation set]

MCC = 0

When k=32, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=33) on training set & applying the kNN model to validation set]

MCC = 0

When k=33, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=34) on training set & applying the kNN model to validation set]

MCC = 0

When k=34, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=35) on training set & applying the kNN model to validation set]

MCC = 0

When k=35, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=36) on training set & applying the kNN model to validation set]

MCC = 0

When k=36, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=37) on training set & applying the kNN model to validation set]

MCC = 0

When k=37, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=38) on training set & applying the kNN model to validation set]

MCC = 0

When k=38, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=39) on training set & applying the kNN model to validation set]

MCC = 0

When k=39, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=40) on training set & applying the kNN model to validation set]

MCC = 0

When k=40, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=41) on training set & applying the kNN model to validation set]

MCC = 0

When k=41, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=42) on training set & applying the kNN model to validation set]

MCC = 0

When k=42, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=43) on training set & applying the kNN model to validation set]

MCC = 0

When k=43, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=44) on training set & applying the kNN model to validation set]

MCC = 0

When k=44, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=45) on training set & applying the kNN model to validation set]

MCC = 0

When k=45, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=46) on training set & applying the kNN model to validation set]

MCC = 0

When k=46, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=47) on training set & applying the kNN model to validation set]

MCC = 0

When k=47, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=48) on training set & applying the kNN model to validation set]

MCC = 0

When k=48, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=49) on training set & applying the kNN model to validation set]

MCC = 0

When k=49, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=50) on training set & applying the kNN model to validation set]

MCC = 0

When k=50, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=51) on training set & applying the kNN model to validation set]

MCC = 0

When k=51, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=52) on training set & applying the kNN model to validation set]

MCC = 0

When k=52, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=53) on training set & applying the kNN model to validation set]

MCC = 0

When k=53, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=54) on training set & applying the kNN model to validation set]

MCC = 0

When k=54, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=55) on training set & applying the kNN model to validation set]

MCC = 0

When k=55, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=56) on training set & applying the kNN model to validation set]

MCC = 0

When k=56, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=57) on training set & applying the kNN model to validation set]

MCC = 0

When k=57, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=58) on training set & applying the kNN model to validation set]

MCC = 0

When k=58, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=59) on training set & applying the kNN model to validation set]

MCC = 0

When k=59, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=60) on training set & applying the kNN model to validation set]

MCC = 0

When k=60, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=61) on training set & applying the kNN model to validation set]

MCC = 0

When k=61, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=62) on training set & applying the kNN model to validation set]

MCC = 0

When k=62, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=63) on training set & applying the kNN model to validation set]

MCC = 0

When k=63, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=64) on training set & applying the kNN model to validation set]

MCC = 0

When k=64, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=65) on training set & applying the kNN model to validation set]

MCC = 0

When k=65, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=66) on training set & applying the kNN model to validation set]

MCC = 0

When k=66, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=67) on training set & applying the kNN model to validation set]

MCC = 0

When k=67, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=68) on training set & applying the kNN model to validation set]

MCC = 0

When k=68, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=69) on training set & applying the kNN model to validation set]

MCC = 0

When k=69, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=70) on training set & applying the kNN model to validation set]

MCC = 0

When k=70, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=71) on training set & applying the kNN model to validation set]

MCC = 0

When k=71, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=72) on training set & applying the kNN model to validation set]

MCC = 0

When k=72, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=73) on training set & applying the kNN model to validation set]

MCC = 0

When k=73, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=74) on training set & applying the kNN model to validation set]

MCC = 0

When k=74, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=75) on training set & applying the kNN model to validation set]

MCC = 0

When k=75, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=76) on training set & applying the kNN model to validation set]

MCC = 0

When k=76, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=77) on training set & applying the kNN model to validation set]

MCC = 0

When k=77, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=78) on training set & applying the kNN model to validation set]

MCC = 0

When k=78, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=79) on training set & applying the kNN model to validation set]

MCC = 0

When k=79, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=80) on training set & applying the kNN model to validation set]

MCC = 0

When k=80, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=81) on training set & applying the kNN model to validation set]

MCC = 0

When k=81, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=82) on training set & applying the kNN model to validation set]

MCC = 0

When k=82, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=83) on training set & applying the kNN model to validation set]

MCC = 0

When k=83, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=84) on training set & applying the kNN model to validation set]

MCC = 0

When k=84, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=85) on training set & applying the kNN model to validation set]

MCC = 0

When k=85, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=86) on training set & applying the kNN model to validation set]

MCC = 0

When k=86, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=87) on training set & applying the kNN model to validation set]

MCC = 0

When k=87, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=88) on training set & applying the kNN model to validation set]

MCC = 0

When k=88, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=89) on training set & applying the kNN model to validation set]

MCC = 0

When k=89, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=90) on training set & applying the kNN model to validation set]

MCC = 0

When k=90, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=91) on training set & applying the kNN model to validation set]

MCC = 0

When k=91, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=92) on training set & applying the kNN model to validation set]

MCC = 0

When k=92, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=93) on training set & applying the kNN model to validation set]

MCC = 0

When k=93, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=94) on training set & applying the kNN model to validation set]

MCC = 0

When k=94, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=95) on training set & applying the kNN model to validation set]

MCC = 0

When k=95, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=96) on training set & applying the kNN model to validation set]

MCC = 0

When k=96, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=97) on training set & applying the kNN model to validation set]

MCC = 0

When k=97, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=98) on training set & applying the kNN model to validation set]

MCC = 0

When k=98, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=99) on training set & applying the kNN model to validation set]

MCC = 0

When k=99, the MCC value is 0	 (worst possible: -1; best possible: +1)

[Training the kNN model (with k=100) on training set & applying the kNN model to validation set]

MCC = 0

When k=100, the MCC value is 0	 (worst possible: -1; best possible: +1)

The best k value is 3, corresponding to MCC=0.0278639106287676
[Optimization end]


 @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ 
[Training the kNN model (with the OPTIMIZED hyper-parameter k=3) on training set & applying the kNN to the test set]

PR AUC (integral) 	0.3214288
ROC AUC 		0.5485636


TOTAL:

 FN =  11  /  17 	 (truth == 1) & (prediction < threshold)
 TP =  6  /  17 	 (truth == 1) & (prediction >= threshold)

 FP =  11  /  43 	 (truth == 0) & (prediction >= threshold)
 TN =  32  /  43 	 (truth == 0) & (prediction < threshold)



 @@@ Test set @@@ 	 MCC 	 F1_score 	 accuracy 	 TP_rate 	 TN_rate 	 PR AUC 	 ROC AUC
@@@ Test set @@@      +0.10 	 0.35 	 0.63 	 0.35 	 0.74		 0.32		0.55




=== final results ===
Number of executions = 100
          MCC F1_score accuracy TP_rate TN_rate PR_AUC ROC_AUC
median -0.024    0.131    0.617   0.098   0.879  0.313   0.490
mean   -0.025    0.148    0.624   0.121   0.866  0.323   0.493


=== === === ===
